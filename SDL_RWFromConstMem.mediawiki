<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_RWFromConstMem =
Use this function to *prepare a constant memory area for use with RWops. *


== Syntax ==
```c++
SDL_RWops* SDL_RWFromConstMem(const void* mem,
                              int         size)
```

== Function Parameters ==
{|
|'''mem'''
|,,a pointer to,, ^a memory location to use for an SDL_RWops structure^
|-
|'''size'''
|^the size of the memory location^
|}

<<Color2(green,Is '''mem''' an exception to the 'pointer rule'?)>>

== Return Value ==
*<br/>Returns a pointer to a new ^SDL_^RWops structure, or NULL if it fails. <br/>*

== Code Examples ==
*
```c++
char bitmap[] = {
    66, 77, 86, 2, 0, 0, 0, 0 ...
}
SDL_RWops *rw;
SDL_Surface *img;

rw = SDL_RWFromConstMem(bitmap, sizeof(bitmap));
img = SDL_LoadBMP_RW(rw, 1); // Automatically frees the RWops struct for us

// Do something with img...
```
*

== Remarks ==
*<br/>[[SDL_RWFromConstMem]]() sets up a^n^ ^SDL_^RWops struct based on a memory area of a certain size. It assumes the memory area is not writable. <br/>*

== Related Functions ==
:[[SDL_FreeRW]] *
:[[SDL_RWFromFile]] ???
:[[SDL_RWFromFP]] ???
:[[SDL_RWFromMem]] *

----
[[CategoryAPI]], [[CategoryIO]]
