<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->

= SDL_RendererInfo =
A structure that contains information on the capabilities of a render driver or context.


== Data Fields ==
{|
|const char*
|'''name'''
|the name of the renderer
|-
|Uint32
|'''flags'''
|a mask of supported [[SDL_RendererFlags]]; see [[#flags|Remarks]] for details
|-
|Uint32
|'''mod_modes'''
|a mask of supported channel modulation; see [[#mod_modes|Remarks]] for details
|-
|Uint32
|'''blend_modes'''
|a mask of supported blend modes
|-
|Uint32
|'''scale_modes'''
|a mask of supported scale modes
|-
|Uint32
|'''num_texture_formats'''
|the number of available texture formats
|-
|Uint32[20]
|'''texture_formats'''
|the available texture formats
|-
|int
|'''max_texture_width'''
|the maximimum texture width
|-
|int
|'''max_texture_height'''
|the maximimum texture height
|}

<!-- # Use the following markup to display values on a related function page: <<Include(SDL_RendererInfo, , , from="== Data Fields ==", to="== Code Examples ==")>> -->

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
<span id="mod_modes"></span> '''mod_modes''' may be a mask of any of the following [[SDL_TextureModulate]] values OR'd together:  <<Include(SDL_TextureModulate, , , from="== Values ==", to="== Code Examples ==")>>


== Related Enumerations ==
:[[SDL_PixelFormatEnum]]
:[[SDL_RendererFlags]]
 l[[SDL_TextureModulate]]

== Related Functions ==
:[[SDL_FunctionLeaveSectionIfEmpty]]

----
[[CategoryStruct]]
