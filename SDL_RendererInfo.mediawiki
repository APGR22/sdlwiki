<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->

= SDL_RendererInfo =
A structure that contains information on the capabilities of a render driver or the current render context.


== Data Fields ==
{|
|const char*
|'''name'''
|the name of the renderer
|-
|Uint32
|'''flags'''
|a mask of supported renderer flags; see [[#flags|Remarks]] for details
|-
|Uint32
|'''mod_modes'''
|a mask of supported channel modulation; see [[#mod_modes|Remarks]] for details
|-
|Uint32
|'''blend_modes'''
|a mask of supported blend modes; see [[#blend_modes|Remarks]] for details
|-
|Uint32
|'''scale_modes'''
|a mask of supported scale modes; see [[#scale_modes|Remarks]] for details
|-
|Uint32
|'''num_texture_formats'''
|the number of available texture formats
|-
|Uint32[50]
|'''texture_formats'''
|the available texture formats; see [[#texture_formats|Remarks]] for details
|-
|int
|'''max_texture_width'''
|the maximimum texture width
|-
|int
|'''max_texture_height'''
|the maximimum texture height
|}

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
<span id="flags"></span> '''flags''' may be 0 or a mask of any of the following [[SDL_RendererFlags]] values OR'd together:  <<Include(SDL_RendererFlags, , , from="== Values ==", to="== Code Examples ==")>>

<span id="mod_modes"></span> '''mod_modes''' may be SDL_TEXTUREMODULATE_NONE or a mask of any of the other [[SDL_TextureModulate]] values OR'd together:  <<Include(SDL_TextureModulate, , , from="== Values ==", to="== Code Examples ==")>>

<span id="blend_modes"></span> '''blend_modes''' may be SDL_BLENDMODE_NONE or a mask of any of the other [[SDL_BlendMode]] values OR'd together: <<Include(SDL_BlendMode, , , from="== Values ==", to="== Code Examples ==")>>

<span id="scale_modes"></span> '''scale_modes''' may be SDL_SCALEMODE_NONE or a mask of any of the other [[SDL_ScaleMode]] values OR'd together: <<Include(SDL_ScaleMode, , , from="== Values ==", to="== Code Examples ==")>>

<span id="texture_formats"></span> '''texture_formats''' is an array of [[SDL_PixelFormatEnum]] values representing the available texture formats for the renderer <<Include(SDL_PixelFormatEnum, , , from="== Values ==", to="== Code Examples ==")>>

== Related Enumerations ==
:[[SDL_BlendMode]]
:[[SDL_PixelFormatEnum]]
:[[SDL_RendererFlags]]
:[[SDL_TextureModulate]]
:[[SDL_ScaleMode]]

== Related Functions ==
:[[SDL_GetRenderDriverInfo]]
:[[SDL_GetRendererInfo]]
:[[SDL_RenderCopy]]

----
[[CategoryStruct]], [[CategoryRender]]
