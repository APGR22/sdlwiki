<!-- pragma section-numbers off -->
<!-- pragma camelcase off -->
<!-- acl All:read -->
'''DRAFT'''

= Style Guide: Enumerations Pages =
This guide provides specific instructions for editing or adding your own content to each section of an Enumeration page in this wiki.

'''Enumeration pages should provide basic information about the SDL enumerations to allow users to most effectively utilize them in their projects.'''


<span id="ToC"></span>

== General Guidelines ==
{|
|<<Color2(red,Important note about '''Hints''')>> <br/> The basic enumeration template is also used for hints that have pages in the wiki.  For simplicity, the following guidelines for enumerations will also apply to hints unless a specific difference is noted.
|}

'''Please observe the following for all enumeration pages:'''
* Do not post anything that you do not have permission to post publicly.

* Sections should have adequate details to make them clear and useful while remaining brief wherever possible.  Code Examples and Remarks may be more extensive than other sections if necessary.

* Please remember to keep it accurate, simple, and easy to understand.

* Do not remove, modify, or add to the markup above the page title ~-(processing instructions (ie: <code>#pragma</code>, <code>#acl</code>), <<Color2(red,DRAFT)>> markup, etc.)-~ except:
* On C<code></code>ategoryCompat pages, place the following markup above the page title and below the processing instructions or DRAFT markup, if present:
: ```||<tablewidth="100%" #000000 style="color: #FF8C00;" :> <br/>~+For Backward Compatibility Only+~<br/><br/> ||```

* Do not remove, modify, or add section headings unless specifically mentioned below.

* In general, we prefer that you do not remove or modify existing content unless it is clearly incorrect or out of date.

* Pages with <<Color2(red,DRAFT)>> at the top are in progress and will often contain unusual content, formatting, or notes.  Please do not remove or modify these.  That will all be corrected/removed upon final edit.


~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
== Getting Started ==
 1. Begin by going to the page you wish to edit and selecting <<Color2(blue,Edit (Text))>> or <<Color2(blue,Edit (GUI))>> in the left column to begin editing.
  {i} ~-Markup info provided here is specifically for use in the Text editor but should work in both.-~
 1. Scroll down in the edit window to the section(s) you want to edit.  Add your content following the conventions in this style guide.
 1. Find information relevant to your content in the style guide sections [[#specifics|below]] and apply the appropriate formatting as you edit.
 1. Preview your work as you go by clicking <<Color2(blue,Preview)>> in the left column.  Preview often and any time you are unsure of formatting. 
: ~-(Keep in mind that a few things (like [[SGWikiBasics#color2|Color2 text]]) don't preview exactly as they parse.)-~
 1. Save your work by clicking <<Color2(blue,Save Changes)>> in the left column after you are satisfied with your content and have filled in the Comment field under the editing box. 

For assistance with editing, saving, or wiki-appropriate markup see the [[SGWikiBasics|Wiki Basics]] Style Guide or contact us at <<MailTo(ANTI SPAM wiki AT libsdl DOT org)>>.



~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
<span id="specifics"></span>
== Editing Specific Sections ==
=== Title ===
'''''Do not edit the Title.'''''

The Title section consists of the page heading and its markup:

 ```= SDL_EnumerationName =``` 

For enumeration pages this is the name of the enumeration being described on the page and should match the address of the page.

''Example'': The page address ```http://wiki.libsdl.org/moin.cgi/SDL_EventType``` should have matching title {{{SDL_EventType}}} and describe the [[SDL_EventType]] structure.

If you believe a change is necessary please submit ''Feedback'' from that page or contact us at <<MailTo(ANTI SPAM wiki AT libsdl DOT org)>>.


~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
=== Description ===
The Description section immediately follows the page title and does not have it's own heading.

'''Enumeration descriptions begin with:
 ```An enumeration of```'''
  or very rarely
 ```A hint that specifies```

: followed by a ''clear and concise'' description of what the enumeration (or hint) is.

<span id="note1"></span>
''Note'': Information presented in this section is meant to be limited.  Extended description information for more complicated enumerations should be placed in the [[#Remarks|Remarks]] section instead.  
* The Description should not contain a link to the Remarks section even if additional information is located there.

''Note'': Exceptions to the basic description are very unusual.  Follow established patterns in the wiki (based on similar pages which may be found by text search) whenever possible if an exception seems appropriate.  

{|
|<( |2 30%>''If'' the page describes __a hint__ rather than an enumeration
|''Action'': Use the alternate description (<code>A hint that specifies...</code>) and, if necessary, replace the word <code>enumeration</code> with the word <code>hint</code> where appropriate throughout the page.
|-
|''Example'': [[SDL_EventType]], [[SDL_HINT_RENDER_SCALE_QUALITY]]
|-
|<( |2 30%>''If'' __another API page__ is referenced in the description
|''Action'': Be sure to [[SGWikiBasics#Hyperlinks|hyperlink]] it and use () outside the link markup if it is a function.
|-
|''Example'': ```[[SDL_FunctionName]](), [[SDL_StructureName]]```, [[SDL_BlendMode]]
|-
|<( 30%>''If'' __a value on that page__ is referenced in the description
|''Action'': There is no special formatting for enumeration values since most are already in all caps and distinct enough. (This is different from function parameters or structure data values.)
|}

<!-- ################################################################# -->

~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
=== Table of Contents ===
'''''Do not edit the Table of Contents.'''''

The Table of Contents consists of the following markup and is generated automatically on the parsed page.
 ```<<TableOfContents()>>```

If you believe a change is necessary please submit ''Feedback'' from that page or contact us at <<MailTo(ANTI SPAM wiki AT libsdl DOT org)>>.


~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
=== Data Fields ===
The Data Fields section provides basic information about each field in the structure and is presented in table format.

'''The basic format is as follows:'''
```
||type1||'''field1'''||description||
||type2*||'''field2'''||description||
||[[type3]]||'''field3'''||description||
...
||typeN||'''fieldN'''||description||
```

''Markup'': Use [[SGWikiBasics#Tables|basic table markup]] and enclose each field name in [[SGWikiBasics#Text_Formatting|bold]] markup.  All text in the table is left-justified.

* The __first column__ contains the field type and any pointers if applicable.
* The __second column__ contains the field name, without types or pointers, in bold.
* The __third column__ contains a simple description of each field using some specific formatting conventions.
: ''<<Color2(red,Important!)>>'' All descriptions begin with a ''lower case'' letter, end ''without'' a period, and are generally ''not'' complete sentences.

''Example'': [[SDL_Surface]], [[SDL_JoyButtonEvent]], [[SDL_Palette]], [[SDL_HapticCondition]]

''Action'': There are a few content-dependent conventions we have chosen for consistency across pages.  See the tables below for details. 

{|
|
|<bgcolor="#EDEDED"><span id="general"></span>''General (whole table)''
|-
|<( |4 30%>''If'' the field is __for internal use, deprecated, or unused__ (greyed out)
|<span id="grey"></span>''Action 1'': Place a text notation in parentheses at the ''end'' of the description (ie: <code>(deprecated)</code>)
|-
|''Action 2'': Make the text in the row grey by including the following, verbatim, in the first cell of the row between the starting table markup and the text:<br/>```<rowstyle="color: #808080;">```
|-
|''Note'': Although a rare case, any other style markup for that row/cell should be included within the same set of angle brackets (<code><></code>) and separated from this markup by a space.
|-
|''Example'': ```
|<rowstyle="color: #808080;">type
|'''field'''
|description
|```, [[SDL_Palette]], [[SDL_Color]]
|-
|<( |3 30%>''If'' the field is __read-only__
|''Action'': Place the text notation <code>(read-only)</code> in parentheses at the end of the description.<br/>Do not grey out the line.
|-
|''Note'': This also applies to the rare "<code>(read-write)</code>" field.
|-
|''Example'': [[SDL_Surface]], [[SDL_Overlay]]
|-
|<( |3 30%>''If'' __another API page__ is referenced ''and'' __the field is greyed out__ (see [[#grey|above]])
|''Action 1'': DO NOT hyperlink the page in the type column.
|-
|''Action 2'': List the page, with a hyperlink, in the description and/or in the appropriate "Related" section at the bottom of the page, if appropriate.
|-
|''Example'': [[SDL_Event]]
|-
|<( |3 30%>''If'' __another API page__ is referenced ''and'' __the field is ''not'' greyed out__ (see [[#grey|above]])
|''Action1'': Be sure to [[SGWikiBasics#Hyperlinks|hyperlink]] it and use () outside the link markup if it is a function.
|-
|''Action 2'': List the page in the appropriate "Related" section at the bottom of the page, if appropriate.
|-
|''Example'': [[SDL_Event]], [[SDL_AudioSpec]], [[SDL_SysWMinfo]]
|-
|<( |4 30%>''If'' there are __important, distinct groups of fields__ within the structure
|''Action'': Create sections by placing a full-width row with a grey background and centered, italics title above each group.
|-
|''Markup'': Begin the row with empty table cells equal to the number of columns in the table -1 (ie: 2 empty cells for a 3 column table).  Place the following markup in the next cell<br/><code><bgcolor="#EDEDED">''Section Title''</code><br/>Replace <code>Section Title</code> with appropriate text and close the last column.
|-
|''Note'': This is a rare occurrence.  Do not use sections unless they significantly improve the meaning, clarity, or usability of the information.
|-
|''Example'': this table, [[SDL_HapticConstant]], [[SDL_HapticRamp]]
|-
|<( |2 30%>''If'' the structure includes __padding__ fields
|''Action'': Omit all <code>padding</code> fields from the wiki page.
|-
|''Example'': [[SDL_AudioSpec]], [[SDL_WindowEvent]]
|-
|<( |3 30%>''If'' there is __a pointer__ associated with the field
|''Action 1'': Place the pointer symbol(s) at the end of the type in the ''first column'' with no space between.
|-
|''Action 2'': In general, avoid mentioning the pointer in the description unless it is necessary to understand the field.
|-
|''Example'': ```
|type*
|...```, [[SDL_Surface]], [[SDL_assert_data]]
|-
|
|<bgcolor="#EDEDED">''First Column (type) & Second Column (field)''
|-
|
|<(>There are currently no special formatting instructions that affect only these columns.  See [[#general|''General'']] above.
|-
|
|<bgcolor="#EDEDED">''Third Column (description)''
|-
|<( |3 30%>''If'' __more than one statement__ must be included in the description
|''Action'': Separate them with a semi-colon (;)
|-
|''Note'': This should be avoided whenever possible.  See "''If'' a __[[#detailed|more detailed description]]__ is required to adequately explain a field" below for more details.
|-
|''Example'': [[SDL_JoyButtonEvent]], [[SDL_Keysym]]
|-
|<( |4 30%>''If'' a __more detailed description__ is required to adequately explain a field
|<span id="detailed"></span>''Action 1'' : Append the following, verbatim, to the end of the brief description<br/>```; see [[#Remarks|Remarks]] for details```
|-
|''Action 2'': Place the more detailed information in the [[#Remarks|Remarks]] section.
|-
|''Action 3'': See "''If'' the __[[#large|Remarks section is large]]__" below for more details.
|-
|''Example'': [[SDL_RendererInfo]], [[SDL_HapticEffect]]
|-
|<( |4 30%>''If'' the __Remarks section is large__
|<span id="large"></span>''Action 1'': Create an [[SGWikiBasics#Anchors|anchor]] immediately before the additional comments you are adding to the Remarks section.
|-
|''Markup'': Use ```<span id="anchorname"></span>```, where <code>anchorname</code> is a name of your choosing, to create the anchor in the Remarks section. See [[SGWikiBasics#Anchors|Anchors]] for details.
|-
|''Action 2'': Modify the Remarks link in the parameter description (see ''Action 1'' in "''If'' a __[[#detailed|more detailed description]]__ is required to adequately explain a field" above) to the following:<br/>```; see [[#anchorname|Remarks]] for details```<br/>where <code>anchorname</code> matches the name you chose for the anchor in ''Action 1''.
|-
|''Example'': [[SDL_RendererInfo]]
|-
|<( |4 30%>''If'' __a field references another field__ on that same page
|''Action'': Use '''[[SGWikiBasics#Text_Formatting|bold]]''' for the field name.
|-
|''Note'': This is a very rare occurrence.
|-
|''Note'': If the reference is to the field as a ''concept'' rather than ''directly'' to the field itself do not make it bold.<br/>~-Please don't just make the word bold every time it occurs on the page.-~
|-
|''Example'': [[SDL_AudioCVT]], [[SDL_HapticCustom]]
|-
|<( |2 30%>''If'' there is __no relevant description text__
|''Action'': It is acceptable to leave the description cell blank, although it is preferable to put some information there even if it is redundant with the field name or otherwise does not really provide any novel information.
|-
|''Example'': [[SDL_Color]]
|}




~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
=== Code Examples ===
The Code Examples section is meant to contain simple, meaningful examples of how to use the structure in a program.  
* Unlike other sections, which should rarely require editing once DRAFT is removed, this section is ''expected'' to change over time.

This is one of the few sections that is intended to grow and adjust as users discover more information about a structure that would be helpful to share with other users.

For the most part the contents of the Code Examples section will be user-generated and this section will remain as-is until users input their examples.

'''Please see the [[SGCodeExamples|Code Examples]] Style Guide for details on editing this section.'''


~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
=== Remarks ===
The Remarks section is meant to contain additional information that did not fit in the other sections as well as comments regarding the behavior and use of the structure in real-world applications.  
* Unlike other sections, which should rarely require editing once DRAFT is removed, this section is ''expected'' to change over time.

This is one of the few sections that is intended to grow and adjust as users discover more information about how a structure behaves under different circumstances.

For the most part the contents of the Remarks section will be user-generated and this section will remain as-is until users input their comments. 

''Note'': This is __not__ an appropriate place to post questions, suggestions, bugs, or commentary.  Please use the other communication channels available to you, especially the [http://forums.libsdl.org/ forums] and ''Feedback'' form, for these types of remarks.

'''Please see the [[SGRemarks|Remarks]] Style Guide for details on editing this section.'''


~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
=== Related Enumerations ===
The Related Enumerations section provides a list of enumerations specifically referenced by the structure or otherwise ''closely'' related to it.

'''This list __should__ include:'''
* enumerations that are specifically referenced in the structure
* enumerations that are indirectly referenced by but still closely related to the structure
: ~-(ie: the enum is not a field type but its values are used to fill in a field as with [[SDL_EventType]] for the <code>type</code> field in many event structures)-~

'''This list __should not__ include:'''
* every enumeration that might be considered "related" to the structure or any other listed enumerations
: ~-Including too many would make these lists much less valuable.-~
* all enumerations of similar type
* all enumerations of a related category
* enumerations that are indirectly related 
: ~-(ie: it might be common to use them together)-~
* enumerations that do not have a page in the wiki
* non-enumerations 
: ~-(ie: do not include functions or structures in this list)-~

''Markup'': Each line should begin with a single blank space and a period followed by the enumeration name enclosed in double brackets to create a [[SGWikiBasics#Hyperlinks|hyperlink]].
: ''Note'': Do not include empty parentheses after the name.

: '''The basic format for the Related Enumerations list is:'''
```
== Related Enumerations ==
 .[[SDL_EnumerationName]]
 .[[SDL_EnumerationName]]
```
: ~-''Note'': The heading was included to more clearly illustrate the blank space before the period at the beginning of each list line.  Without this markup the format will not parse correctly.-~

{|
|<( 30%>''If'' there is __more than one enumeration__ in the list
|''Action'': List the enumerations in alphabetical order.
|-
|<( 30%>''If'' the structure is __a member of the [[SDL_Event]] union__
|''Action'': Include [[SDL_EventType]] in this section of the page.
|-
|<( |2 30%>''If'' there are __no related enumerations__
|''Action'': This section may be removed entirely (including the heading) and added back at a later time if it becomes relevant.
|-
|''Note'': It is common for this section to be empty and removed from the page.
|}

''Example'': [[SDL_Event]], [[SDL_Keysym]], [[SDL_WindowEvent]]


~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
=== Related Structures ===
The Related Structures section provides a list of other structures (or unions) specifically referenced by the structure or otherwise ''closely'' related to it.


'''This list __should__ include:'''
* other structures that are specifically referenced in the structure
* other structures that are indirectly referenced by but closely related to the structure 
: ~-This is uncommon.-~

'''This list __should not__ include:'''
* the primary structure on that page
* every other structure that might be considered "related" 
: ~-Including too many would make these lists much less valuable.-~
* all structures of similar type
* all structures of a related category
* structures that are indirectly related 
: ~-(ie: it might be common to use them together)-~
* structures that do not have a page in the wiki
* non-structures 
: ~-(ie: do not include functions or enumerations in this list)-~

''Markup'': Each line should begin with a single blank space and a period followed by the structure name enclosed in double brackets to create a [[SGWikiBasics#Hyperlinks|hyperlink]].
: ''Note'': Do not include empty parentheses after the name.

: '''The basic format for the Related Structures list is:'''
```
== Related Structures ==
 .[[SDL_StructureName]]
 .[[SDL_StructureName]]
```
: ~-''Note'': The heading was included to more clearly illustrate the blank space before the period at the beginning of each list line.  Without this markup the format will not parse correctly.-~

{|
|<( 30%>''If'' there is __more than one structure__ in the list
|''Action'': List the structures in alphabetical order.
|-
|<( 30%>''If'' the structure is __a member of the [[SDL_Event]] union__
|''Action'': Include [[SDL_Event]] in this section of the page.
|-
|<( |2 30%>''If'' there are __no related structures__
|''Action'': This section may be removed entirely (including the heading) and added back at a later time if it becomes relevant.
|-
|''Note'': It is common for this section to be empty and removed from the page.
|}

''Example'': [[SDL_Event]], [[SDL_Color]], [[SDL_HapticDirection]]



~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
<span id="RFs"></span>
=== Related Macros ===
{i} This is a custom section that should not be used except in the most specific circumstances.  
''Example'': [[SDL_version]]
The Related Macros section provides a list of functions specifically associated with that structure or otherwise ''closely'' related to it.


~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
<span id="RFs"></span>
=== Related Functions ===
The Related Functions section provides a list of functions specifically associated with that structure or otherwise ''closely'' related to it.
* In general, a "Related Function" is one that __uses the given structure__.

'''This list __should__ include:'''
* functions that use or are otherwise very closely related to the structure

'''This list __should not__ include:'''
* every other function that might be considered "related" 
: ~-Including too many would make these lists much less valuable.-~
* all functions of similar type or action
* all functions of a related category
* functions that are indirectly related (ie: a similar function that does not use the structure)
* functions that do not have a page in the wiki
* non-functions (ie: do not include structures or enumerations in this list)

''Markup'': Each line should begin with a single blank space and a period followed by the function name enclosed in double brackets to create a [[SGWikiBasics#Hyperlinks|hyperlink]].
: ''Note'': Do not include empty parentheses after the function names in this section.  They are all functions so it should be understood/unnecessary.

: '''The basic format for the Related Functions list is:'''
```
== Related Functions ==
 .[[SDL_FunctionName]]
 .[[SDL_FunctionName]]
```
: ~-''Note'': The heading was included to more clearly illustrate the blank space before the period at the beginning of each list line.  Without this markup the format will not parse correctly.-~

{|
|<( 30%>''If'' there is __more than one function__ in the list
|''Action'': List the functions in alphabetical order.
|-
|<( 30%>''If'' there are __no related functions__
|''Action'': This section may be removed entirely (including the heading) and added back at a later time if it becomes relevant.
|}

''Example'': [[SDL_TextInputEvent]](), [[SDL_SysWMinfo]]()


~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>
<span id="footer"></span>
=== Footer ===

The Footer section consists of a horizontal rule followed by two links separated by a comma.  

''Markup'': 
```
----
[[CategoryStruct]], [[CategoryHeader]]
```
: where <code>CategoryStruct</code> is the same for every structure page and <code>CategoryHeader</code> is structure-specific with <code>Header</code> varying based on the header file containing the structure (see below).

<<Color2(red,''Important!'')>> Category names do not always match the header file name.  Please consult the following [[#CategoryTable|table]] for the correct name to use so the structure will appear in the correct list(s).

''Action 1'': '''Do not edit the <code>CategoryStruct</code> link!'''

''Action 2'': '''The ```CategoryHeader``` link may be edited''' ''if'' the page still says {{{[[CategoryHeader]]}}} (as on a new page) or ''if'' the structure has been relocated to another header (very rare).

''<<Color2(red,Important!)>>'' There are a few exceptions to this rule (pages with a category name that does not match their header file).  These have been determined by the SDL team.  Please do not change an existing page's category name simply because it does not match its header file.  If you are concerned that a name is incorrect please submit ''Feedback'' from that page or contact us at <<MailTo(ANTI SPAM wiki AT libsdl DOT org)>> to confirm the change first.  

''Markup'': Replace <code>CategoryHeader</code> with the appropriate category name from the table that follows, or contact us at <<MailTo(ANTI SPAM wiki AT libsdl DOT org)>> to find out what category name to use if you are unsure or if the category appears to be missing.

<span id="CategoryTable"></span>
{|
|<rowbgcolor="#EDEDED">''Header File Containing the Structure*''
|''Corresponding Category Name''
|-
|SDL.h
|CategoryInit
|-
|SDL_assert.h
|CategoryAssertions
|-
|SDL_atomic.h
|CategoryAtomic
|-
|SDL_audio.h
|CategoryAudio
|-
|SDL_clipboard.h
|CategoryClipboard
|-
|SDL_compat.h
|CategoryCompat
|}
<!-- #||SDL_copying.h|||| -->
{|
|SDL_cpuinfo.h
|CategoryCPU
|-
|SDL_endian.h
|CategoryEndian
|-
|SDL_error.h
|CategoryError
|-
|SDL_events.h
|CategoryEvents
|}
<!-- #||SDL_gesture.h|||| -->
{|
|SDL_haptic.h
|CategoryForceFeedback
|-
|SDL_hints.h
|CategoryHints
|}
<!-- #||SDL_input.h|||| -->
{|
|SDL_joystick.h
|CategoryJoystick
|-
|SDL_keyboard.h
|CategoryKeyboard
|-
|SDL_keycode.h
|CategoryKeyboard
|-
|SDL_loadso.h
|CategorySharedObject
|-
|SDL_log.h
|CategoryLog
|}
<!-- #||SDL_main.h|||| -->
{|
|SDL_mouse.h
|CategoryMouse
|-
|SDL_mutex.h
|CategoryMutex
|}
<!-- #||SDL_name.h|||| -->
<!-- #||SDL_opengl.h||CategoryOpenGL|| -->
<!-- #||SDL_opengles.h||CategoryOpenGL|| -->
<!-- #||SDL_opengles2.h||CategoryOpenGL|| -->
{|
|SDL_pixels.h
|CategoryPixels
|-
|SDL_platform.h
|CategoryPlatform
|-
|SDL_power.h
|CategoryPower
|-
|SDL_quit.h
|CategoryEvents
|-
|SDL_rect.h
|CategoryRect
|-
|SDL_render.h
|CategoryRender
|}
<!-- #||SDL_revision.h|||| -->
{|
|SDL_rwops.h
|CategoryIO
|-
|SDL_scancode.h
|CategoryKeyboard
|}
<!-- #||SDL_shape.h|||| -->
<!-- #||SDL_stdinc.h|||| -->
{|
|SDL_surface.h
|CategorySurface
|-
|SDL_syswm.h
|CategorySWM
|-
|SDL_thread.h
|CategoryThread
|-
|SDL_timer.h
|CategoryTimer
|}
<!-- #||SDL_touch.h|||| -->
<!-- #||SDL_types.h|||| -->
{|
|SDL_version.h
|CategoryVersion
|-
|SDL_video.h
|CategoryVideo
|-
|
|~-*Some exceptions exist.  See above.-~
|}





~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>

=== Special ===
This section contains details for special formatting circumstances that are best described separately from the average structure page.  In general these guidelines should be used in conjunction with the above.

<span id="callback"></span>
==== Callback Functions ====
Although having a callback function associated with a structure is rare, it does occasionally occur.  Documenting this will affect two (2) sections of the structure's page - Data Fields and Remarks.

: ''Note'': Because callback functions are so rare with structures most of the examples listed here will be on function pages.  This is for illustrative purposes only.  '''As of this writing the only callback associated with a structure is the audio callback, found with [[SDL_AudioSpec]].'''  Because of this rarity many of the guidelines below will not currently apply to a structure-based callback, but this is being written with the future possibilities in mind.

''Action 1'': '''Use the following formatting specifics in addition to those listed [[#Data Fields|above]] for the structure whenever a callback function is included on a structure page:'''

{|
|
|<bgcolor="#EDEDED">''Data Fields Section Formatting Details''
|-
|<( |3 30%>For the field that refers to the __callback__ function
|''Action'': Use the following wording, modified as necessary, to describe the field:<br/><code>the</code> <code>function</code> <code>to</code> <code>call</code> <code><when</code><code>/</code><code>why>;</code> <code>see</code> <code>[[#Remarks|Remarks]]</code> <code>for</code> <code>details</code><br/>where the text in <code><></code> is replaced with an appropriate description of when or why the callback would be called.
|-
|''Note'': This parameter is often named '''callback''' but may have other names.
|-
|''Example'': [[SDL_LogSetOutputFunction]](), [[SDL_AddEventWatch]](), [[SDL_CreateThread]](), [[SDL_SetAssertionHandler]]()
|-
|<( |4 30%>For the field that passes __user data__ to the callback
|<span id="UserData"></span>''Action'': Use the following wording, modified as necessary, to describe the field:<br/><code>a</code> <code>pointer</code> <code>that</code> <code>is</code> <code>passed</code> <code>to</code> <code>'''callback'''</code><br/>where <code>callback</code> is replaced with the callback function field name (if necessary).
|-
|''Note'': In rare cases this may be a pointer to a pointer and should be described as such.
|-
|''Note'': This field is often named '''userdata''', but may have other names.  It is important to distinguish this field from other fields that are passed to the callback also, but that are not strictly carrying "user data", and from other fields that are unrelated to the callback function (such as '''samples''', '''channels''').  See below for details.
|-
|''Example'': [[SDL_AudioSpec]], [[SDL_LogSetOutputFunction]](), [[SDL_CreateThread]]()
|-
|<( |2 30%>For other fields __related to the callback__
|''Action'': There may be other fields that are passed to the callback function but which are sufficiently different from the __[[#UserData|user data]]__ concept that the wording above does not really apply.  In these cases use a description that is appropriate.  Often it will still be appropriate to include the phrase <code>passed to</code> <code>'''callback'''</code> in these descriptions.
|-
|''Example'': [[SDL_AddTimer]](), [[SDL_SetTimer]]()
|-
|<( |2 30%>For additional data fields __''not'' related to the callback__
|<span id="notCallback"></span>''Action'': Follow any applicable guidelines listed [[#Data Fields|above]]
|-
|''Example'': [[SDL_CreateThread]]()
|}

<span id="prototype"></span>
''Action 2'': '''Detail the syntax and parameters of the callback function in the Remarks section using the following __basic format__ with the changes listed in the table below:'''
   ```{
The function prototype for '''callback''' is:
 {{{#!highlight cpp
callback syntax
```
: where its parameters are:
 ||<code>callback parameter</code>||description||
: optional return value info...
: optional remarks or details...
}}}}
: to display
The function prototype for '''callback''' is:
 ```c++
callback syntax
```
: where its parameters are:
 ||<code>callback parameter</code>||description||
: optional return value info...
: optional remarks or details...

{|
|
|<bgcolor="#EDEDED">''Remarks Section Formatting Details''
|-
|<( |2 30%>__Location__
|''Action'': Generally the Remarks section is roughly organized in the same order as the data fields.  Callback details should be located in the appropriate region of the Remarks section or at the top if all other Remarks are less directly related to a particular data field.  But, logic should prevail in determining where to place this information if the Remarks section is large. The callback information should be prominent.
|-
|''Example'': [[SDL_CreateThread]](), [[SDL_AddEventWatch]](), [[SDL_SetAssertionHandler]]()
|-
|<( 30%>__Alignment__
|''Action'': As shown in the [[#prototype|basic format]] above, only the first line should be left-justified.  Everything else related directly to the callback should be [[SGWikiBasics#Indenting|indented]] one level (or more) to indicate it's relationship to the callback as opposed to the structure.
|-
|<( |2 30%>''If'' the callback field is __not '''callback'''__
|''Action'': Replace '''callback''' in the [[#prototype|basic format]] above with the data field name used in the structure to refer to the callback function.
|-
|''Example'': [[SDL_SetEventFilter]](), [[SDL_CreateThread]](), [[SDL_SetAssertionHandler]]()
|-
|<( 30%>For __"callback syntax"__ in the [[#prototype|basic format]] above
|''Action'': Replace "callback syntax" with the callback function's syntax formatted the same as [[SGFunctions#Syntax|regular functions]].
|-
|<( |2 30%>''If'' the __callback function name__ requires any explanation
|''Action'': Replace "where its parameters are:" in the [[#prototype|basic format]] above with the following:<br/><code>where</code> <code><CallbackName></code> <code>is</code> <code><some</code> <code>explanation></code> <code>and</code> <code>its</code> <code>parameters</code> <code>are:</code><br/>replacing <code><CallbackName></code> with the name of the callback function and <code><some</code> <code>explanation></code> with an explanation of the name (ie: your function name).
|-
|''Example'': [[SDL_AddEventWatch]]()
|-
|<( |4 30%>For __| <code>callback parameter</code> | description |__ in the [[#prototype|basic format]] above
|''Action 1'': Duplicate the line from above for each parameter in the callback (ie: there should be 2 lines for 2 parameters).
|-
|''Action 2'': Replace "callback parameter" with the name of each callback function parameter using the same formatting instructions as [[SGFunctions#Syntax|regular functions]] '''''except''''' use ```<code>monospace</code>``` (surrounding backticks) rather than bold to highlight the parameter names in the first column.
|-
|''Action 3'': Replace "description" with an appropriate description of the callback's parameter. See the following for specific parameters.
|-
|''Example'': [[SDL_FilterEvents]](), [[SDL_LogSetOutputFunction]]()
|-
|<( |2 30%>For the __<code>userdata</code>__ parameter (or comparable)
|''Action'': Use the following text (modified as necessary):<br/><code>an</code> <code>application-</code><code>specific</code> <code>parameter</code> <code>saved</code> <code>as</code> '''<code>userdata</code>''' <code>in</code> <code>[[SDL_StructureName]]()</code><br/>replacing '''userdata''' with the appropriate parameter name if necessary, and replacing <code>StructureName</code> with the name of the structure on the page.
|-
|''Example'': [[SDL_AddEventWatch]](), [[SDL_AddTimer]]()
|-
|<( |3 30%>''If'' the callback function's __return value__ is important
|''Action 1'': Replace "optional return value info..." in the [[#prototype|basic format]] above with the relevant return value information.  Be sure to indent text one level as shown.
|-
|''Note'': Callback return value information may be omitted if it is not important.  It may be left-justified if it is discussed in the context of the structure rather than the callback itself.
|-
|''Example'': [[SDL_AudioSpec]], [[SDL_AddEventWatch]](), [[SDL_AddTimer]]()
|-
|<( |2 30%>''If'' there are __"optional remarks or details"__
|''Action'': Replace "optional remarks or details..." in the [[#prototype|basic format]] above with any other relevant information about the callback function.  Be sure to indent text at least one level as shown.
|-
|''Example'': [[SDL_LogGetOutputFunction]](), [[SDL_LogSetOutputFunction]]()
|}


<br/>


==== Compatibility Structures ====
Compatibility Structures are present in the API for backward compatibility only and thus are treated slightly differently than structures from the current version.  '''Use the following formatting specifics in addition to those listed above for all [[#CategoryCompat|CategoryCompat]] pages:''':

''Action 1'': The top of every compatibility structure page should include the following, verbatim, to be placed below the pragma markup, below <<Color2(red,DRAFT)>> if present, and above the page title:
 ```
||<tablewidth="100%" #000000 style="color: #FF8C00;" :> <<BR>>~+For Backward Compatibility Only+~<<BR>><<BR>> ||
```

''Action 2'': 
 ||<( 30%>''If'' __only one SDL 1.3 structure__ replaces the compatibility structure||''Action'': See ''Markup A'' below.||
 ||<( |2 30%>''If'' __more than one SDL 1.3 structure__ has replaced the compatibility structure||''Action'': See ''Markup B'' below.||
 ||''Note'': This should occur only very rarely, if at all.  Please avoid making the list any larger than necessary.  This is NOT a related structures list!||
 ||<( 30%>''If'' there are __no equivalent structures__ in SDL 1.3||''Action'': See ''Markup C'' below.||
 ||||''Example'': [[SDL_ActiveEvent]], [[SDL_Overlay]], [[SDL_VideoInfo]]||
<br/>
: ''Markup A'': Add the following section to the end of the page above the footer.  Replace <code>SDL_Structure</code> with the name of the appropriate SDL 1.3 structure:
  ```
== SDL 1.3 Replacement(s) ==
||<tablewidth="100%" #000000 style="color: #FF8C00;">'''This structure has been replaced by the following in SDL 1.3:  [[SDL_Structure]]'''||
```
<br/>
: ''Markup B'': Add the following section to the end of the page above the footer.  Create a list of structures by repeating the <code>[[SDL_Structure]]</code> markup, separating each member of the list with a comma, and placing the most direct counterpart first, alphabetizing any additional structures after that.
  ```
== SDL 1.3 Replacement(s) ==
||<tablewidth="100%" #000000 style="color: #FF8C00;">'''This structure has been replaced by the following in SDL 1.3:  [[SDL_Structure]], [[SDL_Structure]]'''||
```
<br/>
: ''Markup C'': Add the following section to the end of the page above the footer.  Replace <code>Other options here</code> with text describing other options in SDL 1.3 that could be used to accomplish the same goal, or remove it if there is no applicable text:
  ```
== SDL 1.3 Replacement(s) ==
||<tablewidth="100%" #000000 style="color: #FF8C00;">'''There are currently no equivalent structures in SDL 1.3.'''||
Other options here
```

''Example'': See other [[CategoryCompat]] pages for examples
<!-- #Specific examples need to be added in this section, but at this time it is unclear which will serve as the best examples so specifics are being left out at present. -->
<!-- #Alternate text if it's worded better:  This is deprecated in favor of [[SDL_Structure]].  This is only for backward compatibility. -->




~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>



<<Include(SGWikiBasics, , , from="Start SG Include here.", to="##End SG Include here.")>>
