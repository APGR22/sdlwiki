<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->

= SDL_GL_SwapWindow =
Use this function to update a window with OpenGL rendering.


== Syntax ==
```c++
void SDL_GL_SwapWindow(SDL_Window* window)
```

== Function Parameters ==
{|
|'''window'''
|the window to change
|}

== Code Examples ==
```c++

SDL_Window* window = SDL_CreateWindow("SDL2/OpenGL Demo", 30, 30, 
    640, 480, SDL_WINDOW_OPENGL|SDL_WINDOW_RESIZABLE);
      
/* Create an OpenGL context associated with the window. */
SDL_GLContext glcontext = SDL_GL_CreateContext(window);

/* This makes our buffer swap syncronized with the monitor's vertical refresh */
SDL_GL_SetSwapInterval(1);

/* Clear context */
glClearColor(0,0,0,1);
glClear(GL_COLOR_BUFFER_BIT);

/* <Extra drawing fuctions here> */ 

/* Swap our buffer to display the current contents of buffer on screen */ 
SDL_GL_SwapWindow(window);


```

== Remarks ==
This is used with double-buffered OpenGL contexts, which are the default.

On Mac OS X make sure you bind 0 to the draw framebuffer before swapping the window, otherwise nothing will happen. See [http://renderingpipeline.com/2012/05/nsopenglcontext-flushbuffer-might-not-do-what-you-think/ this blog post] for more info.

----
[[CategoryAPI]], [[CategoryVideo]]
