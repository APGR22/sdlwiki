<!-- pragma section-numbers off -->
<!-- pragma camelcase off -->
'''DRAFT'''

= SDL_MouseWheelEvent =
A structure that contains mouse wheel event information.


== Data Fields ==
{|
|Uint32
|'''type'''
|SDL_MOUSEWHEEL
|-
|Uint32
|'''windowID'''
|the window with mouse focus, if any
|-
|Uint32
|'''which'''
|the mouse instance id, or SDL_TOUCH_MOUSEID; see [[#Remarks|Remarks]] for details
|-
|Sint32
|'''x'''
|the amount scrolled horizontally
|-
|Sint32
|'''y'''
|the amount scrolled vertically
|}

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
[[SDL_MouseWheelEvent]] is a member of the [[SDL_Event]] union and is used when an event of type SDL_MOUSEWHEEL is reported.  You would access it through the event's <code>wheel</code> field.

An SDL_MOUSEWHEEL event occurs whenever a user moves the mouse wheel.

Movements to the left generate negative '''x''' values and to the right generate positive '''x''' values.  Movements up (scroll forward) generate negative '''y''' values and down (scroll backward) generate positive '''y''' values.  <<Color2(green,This information needs to be verified.)>> <<Color2(red, The information is correct for Windows and Mac Os X. Other platforms not checked.)>>

'''which''' may be SDL_TOUCH_MOUSEID, for events that were generated by a touch input device, and not a real mouse. You might want to ignore such events, if your application already handles [[SDL_TouchFingerEvent]].

== Related Enumerations ==
:[[SDL_EventType]]

== Related Structures ==
:[[SDL_Event]]
:[[SDL_MouseButtonEvent]]
:[[SDL_MouseMotionEvent]]

----
[[CategoryStruct]], [[CategoryEvents]]
