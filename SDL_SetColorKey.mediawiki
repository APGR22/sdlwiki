<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_SetColorKey =
Use this function to set the color key (transparent pixel) in a blittable surface *???and enable or disable RLE blit acceleration???*.


== Syntax ==
```c++
int SDL_SetColorKey(SDL_Surface* surface,
                    int          flag,
                    Uint32       key)
```

== Function Parameters ==
{|
|'''surface'''
|the surface / [[SDL_Surface]] to update
|-
|'''flag'''
|non-zero to enable colorkey, 0 to disable colorkey^; see [[#Remarks|Remarks]] for details^
|-
|'''key'''
|the transparent pixel in the native surface format 
|}

== Return Value ==
Returns 0 on success, or -1 if the surface is not valid; call [[SDL_GetError]]() for more information.

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
''You can add useful comments here''

*<br/>RLE acceleration can substantially speed up blitting of images with large horizontal runs of transparent pixels (i.e., pixels that match the key value). The '''key''' must be of the same pixel format as the '''surface''', [[SDL_MapRGB]]() is often useful for obtaining an acceptable value.

If '''flag''' is SDL_SRCCOLORKEY then '''key''' is the transparent pixel value in the source image of a blit.

If '''flag''' is OR'd with SDL_RLEACCEL then the surface will be drawn using RLE acceleration when drawn with [[SDL_BlitSurface]](). The surface will actually be encoded for RLE acceleration the first time [[SDL_BlitSurface]]() or SDL_DisplayFormat is called on the surface.  <<Color2(green,SDL_DisplayFormat is not in 1.3.)>>

If '''flag''' is 0, this function clears any current color key. <br/>*

== Related Functions ==
:[[SDL_GetColorKey]]

----
[[CategoryAPI]], [[CategorySurface]]
