<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_Color =
A structure that contains color information.


== Data Fields ==
{|
|Uint8
|'''r'''
|the red component in the range 0-255
|-
|Uint8
|'''g'''
|the green component in the range 0-255
|-
|Uint8
|'''b'''
|the blue component in the range 0-255
|-
|<style="color: #808080;">Uint8
|<style="color: #808080;">'''unused'''
|<style="color: #808080;">32 bit placeholder
|}

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
[[SDL_Color]] and SDL_<code></code>Colour are interchangeable.

If you have RGB color values you would use decimal values in this struct.  
 ''Example'': orange = 255,165,0 so set r=255, g=165, b=0.  
If you have HTML color codes you would use hexidecimal values in this struct.  
 ''Example'': orange = #FFA500 so set r=0xFF, g=0xA5, b=0x00.

*<br/>[[SDL_Color]] describes a color in a format independent way. You can convert an SDL_Color to a pixel value for a certain pixel format using [[SDL_MapRGB]]().<br/>*

== Related Structures ==
:[[SDL_Palette]]

== Related Functions ==
:[[SDL_GetDisplayPalette]]
:[[SDL_SetDisplayPalette]]
:[[SDL_SetPaletteColors]]
:[[SDL_GetTexturePalette]]
:[[SDL_SetTexturePalette]]

----
[[CategoryStruct]], [[CategoryPixels]]
