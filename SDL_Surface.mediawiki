<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_Surface =
A structure that contains a collection of pixels used in software blitting.


== Data Fields ==
{|
|<style="color: #808080;">Uint32
|<style="color: #808080;">'''flags'''
|<style="color: #808080;">internal
|-
|[[SDL_PixelFormat]]*
|'''format'''
|the format of the pixels stored in the surface; see [[SDL_PixelFormat]] for details (read-only)
|-
|int
|'''w, h'''
|the width and height in pixels (read-only)
|-
|int
|'''pitch'''
|the length of a scanline in bytes (read-only)
|-
|void*
|'''pixels'''
|the pointer to the actual pixel data; the surface should be locked by [[SDL_LockSurface]]() before accessing this field (read-write)
|-
|<:bgcolor="#EDEDED"-3>''Application data associated with the surface''
|-
|void*
|'''userdata'''
|an arbitrary pointer you can set (read-write)
|-
|<:bgcolor="#EDEDED"-3>''Information needed for surfaces requiring locks''
|-
|<style="color: #808080;">int
|<style="color: #808080;">'''locked'''
|<style="color: #808080;">read-only
|-
|<style="color: #808080;">void*
|<style="color: #808080;">'''lock_data'''
|<style="color: #808080;">read-only
|-
|<:bgcolor="#EDEDED"-3>''Clipping information''
|-
|[[SDL_Rect]]
|'''clip_rect'''
|an [[SDL_Rect]] structure used to clip blits to the surface which can be set by [[SDL_SetClipRect]]() (read-only)
|-
|<:bgcolor="#EDEDED"-3>''Info for fast blit mapping to other surfaces''
|-
|<style="color: #808080;">SDL_BlitMap*
|<style="color: #808080;">'''map'''
|<style="color: #808080;">internal
|-
|<:bgcolor="#EDEDED"-3>''Format version, bumped at every change to invalidate blit maps''
|-
|<style="color: #808080;">unsigned int ^Uint?^
|<style="color: #808080;">'''format_version'''
|<style="color: #808080;">internal
|-
|<:bgcolor="#EDEDED"-3>'',,Reference count --,, used when freeing surface''
|-
|int
|'''refcount'''
|internal reference count that can be incremented by the application
|}

== Code Examples ==
```c++
You can add your code example here
```

<<Color2(green,Should any of the User Comments from the old wiki be included here?)>>

== Remarks ==
An [[SDL_Surface]] structure represents an area of graphical memory that can be drawn to.

This structure should be treated as read-only, except for '''pixels''' which, if not NULL, contains the raw pixel data for the surface.

<<Color2(green,Should [[SDL_PixelFormat]] be included here and linked to the data fields?)>>

== Related Structures ==
:[[SDL_SDL_PixelFormat]]
:[[SDL_Rect]]

== Related Functions ==
:[[SDL_BlendCircle]]
:[[SDL_BlendEllipse]]
:[[SDL_BlendFillCircle]]
:[[SDL_BlendFillEllipse]]
:[[SDL_BlendFillRect]]
:[[SDL_BlendFillRects]]
:[[SDL_BlendLine]]
:[[SDL_BlendLines]]
:[[SDL_BlendPoint]]
:[[SDL_BlendPoints]]
:[[SDL_BlendRect]]
:[[SDL_BlendRects]]
:[[SDL_ConvertSurface]]
:[[SDL_CreateRGBSurface]]
:[[SDL_CreateRGBSurfaceFrom]]
:[[SDL_DrawCircle]]
:[[SDL_DrawEllipse]]
:[[SDL_DrawLine]]
:[[SDL_DrawLines]]
:[[SDL_DrawPoint]]
:[[SDL_DrawPoints]]
:[[SDL_DrawRect]]
:[[SDL_DrawRects]]
:[[SDL_FillCircle]]
:[[SDL_FillEllipse]]
:[[SDL_FillRect]]
:[[SDL_FillRects]]
:[[SDL_FreeSurface]]
:[[SDL_GetClipRect]]
:[[SDL_GetColorKey]]
:[[SDL_GetSurfaceAlphaMod]]
:[[SDL_GetSurfaceBlendMode]]
:[[SDL_GetSurfaceColorMod]]
:[[SDL_GetSurfaceScaleMode]]
:[[SDL_LoadBMP_RW]]
:[[SDL_LockSurface]]
:[[SDL_LowerBlit]]
:[[SDL_MUSTLOCK]]
:[[SDL_SaveBMP_RW]]
:[[SDL_SetClipRect]]
:[[SDL_SetColorKey]]
:[[SDL_SetSurfaceAlphaMod]]
:[[SDL_SetSurfaceBlendMode]]
:[[SDL_SetSurfaceColorMod]]
:[[SDL_SetSurfacePalette]]
:[[SDL_SetSurfaceRLE]]
:[[SDL_SetSurfaceScaleMode]]
:[[SDL_SoftStretch]]
:[[SDL_UnlockSurface]]
:[[SDL_UpperBlit]]

----
[[CategoryStruct]], [[CategorySurface]]
