<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_LockSurface =
Use this function to set up a surface for directly accessing the pixels.


== Syntax ==
```c++
int SDL_LockSurface(SDL_Surface* surface)
```

== Function Parameters ==
{|
|'''surface'''
|a pointer to the [[SDL_Surface]] to be locked
|}

== Return Value ==
Returns 0, or -1 if the surface couldn't be locked; call [[SDL_GetError]]() for more information.

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
Between calls to [[SDL_LockSurface]]() / [[SDL_UnlockSurface]](), you can write to and read from surface->pixels, using the pixel format stored in surface->format. Once you are done accessing the surface, you should use [[SDL_UnlockSurface]]() to release it.

Not all surfaces require locking. If SDL_MUSTLOCK(surface) evaluates to 0, then you can read and write to the surface at any time, and the pixel format of the surface will not change.

No operating system or library calls should be made between lock/unlock pairs, as critical system locks may be held during this time. 

== Related Functions ==
:[[SDL_UnlockSurface]]

----
[[CategoryAPI]], [[CategorySurface]]
