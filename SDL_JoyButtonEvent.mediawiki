<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_JoyButtonEvent =
A structure that contains joystick button event ,,structure,, ^information^ (event.jbutton.*).


== Data Fields ==
{|
|Uint32
|'''type'''
|SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP
|-
|Uint8
|'''which'''
|the joystick device index ^*the index of the joystick that reported the event*^
|-
|Uint8
|'''button'''
|the joystick button index ^*the index of the button*^
|-
|Uint8
|'''state'''
|SDL_PRESSED or SDL_RELEASED ^*the current state of the button which is either SDL_PRESSED or SDL_RELEASED*^
|-
|Uint8
|'''padding1'''
|
|}

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
*<br/>[[SDL_JoyButtonEvent]]() is a member of the [[SDL_Event]] union and is used when an event of type SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP is reported.

An SDL_JOYBUTTONDOWN or SDL_JOYBUTTONUP event occurs whenever a user presses or releases a button on a joystick. ,,The field '''which''' is the index of the joystick that reported the event and '''button''' is the index of the button ,,<<Color2(orange,(for a more detailed explanation see the Joystick section))>>. ,,'''state''' is the current state of the button which is either SDL_PRESSED or SDL_RELEASED.,, <br/>*

== Related Functions ==
:[[SDL_JoystickEventState]] *
:[[SDL_JoystickGetButton]] *

----
[[CategoryStruct]], [[CategoryEventsStruct]]
