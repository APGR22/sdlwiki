<!-- #master-page:CategoryTemplate -->
<!-- #master-date:Unknown-Date -->
<!-- format wiki -->
<!-- language en -->
{|
|<tablewidth="100%"style="color: rgb(255, 0, 0); text-align: center;">DRAFT 
|}


= SDL 1.3 API by Category =

== Functions by Type ==

=== Initialization ===
Introduction to Initialization

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryInit|Initialization & Shutdown]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL.h SDL.h] 
|-
|[CategoryError|Error Handling]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_error.h SDL_error.h] 
|-
|[CategoryVersion|Querying SDL Version]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_version.h SDL_version.h] 
|}


=== Video ===
Introduction to Video

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryVideo|Display Management, Window Management and Rendering]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_video.h SDL_video.h] 
|-
|[CategoryPixels|Pixel Formats and Conversion Routines]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_pixels.h SDL_pixels.h] 
|-
|[CategoryRect|Rectangle Functions]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_rect.h SDL_rect.h] 
|-
|[CategorySurface|Surface Creation and Simple Drawing]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_surface.h SDL_surface.h] 
|-
|[CategorySWM|Platform-specific Window Management]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_syswm.h SDL_syswm.h] 
|}


=== Input Events ===
Introduction to Input Events

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryEvents|Event Handling]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_events.h SDL_events.h] 
|-
|[CategoryKeyboard|Keyboard Support]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_keyboard.h SDL_keyboard.h] 
|-
|[CategoryMouse|Mouse Support]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_mouse.h SDL_mouse.h] 
|-
|[CategoryJoystick|Joystick Support]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_joystick.h SDL_joystick.h] 
|}


=== Force Feedback ===
Introduction to Force Feedback

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryForceFeedback|Force Feedback Support]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_haptic.h SDL_haptic.h] 
|}


=== Audio ===
Introduction to Audio

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryAudio|Audio Device Management, Playing and Recording]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_audio.h SDL_audio.h] 
|}


=== File I/O Abstraction ===
Introduction to File I/O Abstraction

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryIO|File I/O Abstraction]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_rwops.h SDL_rwops.h] 
|}


=== Shared Object Support ===
Introduction to Shared Object Support

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategorySharedObject|Shared Object Loading and Function Lookup]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_loadso.h SDL_loadso.h] 
|}


=== Threads ===
Introduction to Threads

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryThread|Thread Management]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_thread.h SDL_thread.h] 
|-
|[CategoryMutex|Thread Synchronization Primitives]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_mutex.h SDL_mutex.h] 
|-
|[CategoryAtomic|Atomic Operations for 32 and 64 Bit Values]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_atomic.h SDL_atomic.h] 
|}


=== Timers ===
Introduction to Timers

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryTimer|Timer Support]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_timer.h SDL_timer.h] 
|}


=== Platform and CPU Information ===
Introduction to Platform and CPU Information

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryPlatform|Platform Detection]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_platform.h SDL_platform.h] 
|-
|[CategoryCPU|CPU Feature Detection]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_cpuinfo.h SDL_cpuinfo.h] 
|-
|[CategoryEndian|Byte Order and Byte Swapping]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_endian.h SDL_endian.h] 
|}


=== Power Management ===
Introduction to Power Management

{|
|<tablewidth="100%">'''View information and functions related to...'''
|'''View the header'''
|-
|[CategoryPower|Power Management Status]] 
|[[http://hg.libsdl.org/SDL/file/68dfd6df47da/include/SDL_power.h SDL_power.h] 
|}


----

== Introductory Information by Category ==

<<Color2(green,I think we decided this introductory information belongs on this page but I have a note that it should be on the Category<code></code>Header pages.  Where would you like it?)>>

<span id="InitI"></span>'''Introduction to Initialization'''

__General__<br/> Functions in this category are used to set up SDL 1.3 for use and generally have global effects in your program.

__Initialization__<br/>
To begin using SDL in your program [[SDL_Init]]() must be called to initialize subsystems and enable use of other SDL funcions. 
* The [[#Timers|Event Handling]], [[#File I/O Abstraction|File I/O]], and [[#Threads|Threading]] subsystems are initialized by default.  To initialize other subsystems you must specifically call them.  Multiple subsystems may be or'd together. 
: ''Example:'' ```SDL_Init(SDL_INIT_VIDEO|SDL_INIT_AUDIO);```
: Initializes the 3 default subsystems and the [[#Video|Video]] and [[#Audio|Audio]] subsystems.

__Shut Down__<br/>
[[SDL_Quit]]() should be called before an SDL application exits to shut down all subsystems, including the default ones.
* It is not necessary to specify individual subsystems when using [[SDL_Quit]]().  It will automatically shut down all active subsystems. 

__Version__<br/>
These functions are used to collect or display information about the version of SDL that is currently being used by the program.
: The version number consists of three segments (X.Y.Z)
* X = Major Version, which increments with massive changes, additions, and enhancements
* Y = Minor Version, which increments with backwards-compatible changes to the major revision
* Z = Patchlevel, which increments with fixes to the minor revision<br/>
 ''Example:'' 1.3.0

There are four (4) macros <<Color2(green,Create a link to a resource that describes macros)>> that apply to this header.

* [[SDL_VERSION]]
* This macro gathers information from SDL_MAJOR_VERSION, SDL_MINOR_VERSION, AND SDL_PATCHLEVEL (#defines) and fills the structure [[SDL_version]] with that information.
* [[SDL_version#Related_Minor_Macros|SDL_VERSIONNUM]]
* A minor macro that converts version numbers into a numeric value.
* [[SDL_version#Related_Minor_Macros|SDL_COMPILEDVERSION]]
* A minor macro that produces the current SDL version number (major.minor.patchlevel)
* [[SDL_version#Related_Minor_Macros|SDL_VERSION_ATLEAST]]
* A minor macro that confirms whether a program was compiled with a version no older than the specified version.

<span id="VideoI"></span>'''Introduction to Video'''

<span id="InputI"></span>'''Introduction to Input'''

<span id="FFI"></span>'''Introduction to Force Feedback'''

The SDL Haptic subsystem allows you to control haptic (force feedback) devices.

The basic usage is as follows:

 1. Initialize the Subsystem (SDL_INIT_HAPTIC)
 1. Open a Haptic Device
  a. [[SDL_HapticOpen]]() to open from index
  a. [[SDL_HapticOpenFromJoystick]]() to open from an existing joystick
 1. Create an effect ([[SDL_HapticEffect]])  <<Color2(green,= typedef union - page? no link?)>>
 1. Upload the effect with [[SDL_HapticNewEffect]]()
 1. Run the effect with [[SDL_HapticRunEffect]]()
 1. (optional) Free the effect with [[SDL_HapticDestroyEffect]]()
 1. Close the haptic device with [[SDL_HapticClose]]()

Code Example:

```c++
int test_haptic( SDL_Joystick * joystick ) {
 SDL_Haptic *haptic;
 SDL_HapticEffect effect;
 int effect_id;

 // Open the device
 haptic = SDL_HapticOpenFromJoystick( joystick );
 if (haptic == NULL) return -1; // Most likely joystick isn't haptic

 // See if it can do sine waves
 if ((SDL_HapticQuery(haptic) & SDL_HAPTIC_SINE)==0) {
  SDL_HapticClose(haptic); // No sine effect
  return -1;
 }

 // Create the effect
 memset( &effect, 0, sizeof(SDL_HapticEffect) ); // 0 is safe default
 effect.type = SDL_HAPTIC_SINE;
 effect.periodic.direction.type = SDL_HAPTIC_POLAR; // Polar coordinates
 effect.periodic.direction.dir[0] = 18000; // Force comes from south
 effect.periodic.period = 1000; // 1000 ms
 effect.periodic.magnitude = 20000; // 20000/32767 strength
 effect.periodic.length = 5000; // 5 seconds long
 effect.periodic.attack_length = 1000; // Takes 1 second to get max strength
 effect.periodic.fade_length = 1000; // Takes 1 second to fade away

 // Upload the effect
 effect_id = SDL_HapticNewEffect( haptic, &effect );

 // Test the effect
 SDL_HapticRunEffect( haptic, effect_id, 1 );
 SDL_Delay( 5000); // Wait for the effect to finish

 // We destroy the effect, although closing the device also does this
 SDL_HapticDestroyEffect( haptic, effect_id );

 // Close the device
 SDL_HapticClose(haptic);

 return 0; // Success
}
```
<span id="AudioI"></span>'''Introduction to Audio'''

<span id="I/OI"></span>'''Introduction to File I/O Abstraction'''

<span id="SOSI"></span>'''Introduction to Shared Object Support'''

<span id="ThreadsI"></span>'''Introduction to Threads'''

<span id="TimersI"></span>'''Introduction to Timers'''

<span id="CPUI"></span>'''Introduction to CPU Feature Detection'''

<span id="PowerI"></span>'''Introduction to Power Management'''

<span id="EndianI"></span>'''Introduction to Endian Independence (Byte Order and Byte Swapping)'''

----
<<Color2(green,This section is junk I don't want to lose yet but will most likely delete. Ignore it.)>> -OR -

In each section:

* For more detailed information on each Category, including how to get started, answers to common questions and errors, and more, click the '''Introduction to...''' link in each section
* For a list of functions found in each header click the link under '''Related Functions'''
* You will find links to detailed pages about each function on those pages
* For the header file itself click the link under '''Header''' in each section

-OR-

Each section below includes

* a link to introductory information about each function type including, where relevant:
* <<Color2(green,Add a list here of the common sections found on each introductory page as the list develops.)>>
* a link to one or more pages containing a complete list of functions belonging to each header in that category
* listed functions link to detailed information on each
* a link to the header page
