<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_UnloadObject =
Use this function to unload a shared object from memory.


== Syntax ==
```c++
void SDL_UnloadObject(void* handle)
```

== Function Parameters ==
{|
|'''handle'''
|*a valid shared object handle returned by [[SDL_LoadObject]]()*
|}

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
*<br/>These functions only work on C function names. Other languages may have name mangling and intrinsic language support that varies from compiler to compiler.

Make sure you declare your function pointers with the same calling convention as the actual library function. Your code will crash mysteriously if you do not do this.

Avoid namespace collisions. If you load a symbol from the library, it is not defined whether or not it goes into the global symbol namespace for the application. If it does and it conflicts with symbols in your code or other shared libraries, you will not get the results you expect.<br/>*

== Related Functions ==
:[[SDL_LoadObject]] *
:[[SDL_LoadFunction]] *

----
[[CategoryAPI]], [[CategorySharedObject]]
