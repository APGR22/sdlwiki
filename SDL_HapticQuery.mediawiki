<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_HapticQuery =
Use this function to get the haptic ,,devices,, ^device's^ supported features in bitwise ,,matter,, ^manner^.


== Syntax ==
```c++
unsigned int SDL_HapticQuery(SDL_Haptic* haptic)
```
<<Color2(green,Should that say Uint8 or Uint16 etc instead of "unsigned int"?)>>

== Function Parameters ==
{|
|'''haptic'''
|the haptic device to query
|}

== Return Value ==
Returns ^a list of supported^ haptic features in bitwise manner (OR'd), or a negative error code on failure; call [[SDL_GetError]]() for more information. 

<<Color2(green,It seems there is probably a more clear or complete way to describe this...  Is there a struct that should be Included here?  Maybe the [[SDL_HapticEffect]] union?)>>

== Code Examples ==
```c++
if (SDL_HapticQueryEffects(haptic) & SDL_HAPTIC_CONSTANT) {
printf("We have constant haptic effect!");
}
```

== Remarks ==
''You can add useful comments here''

== Related Functions ==
:[[SDL_HapticEffectSupported]]
:[[SDL_HapticNumEffects]]

----
[[CategoryAPI]], [[CategoryForceFeedback]]
