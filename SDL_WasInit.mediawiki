= SDL_WasInit =

Get a mask of the specified subsystems which are currently initialized.

== Syntax ==

<syntaxhighlight lang='c'>
Uint32 SDL_WasInit(Uint32 flags);
</syntaxhighlight>

== Function Parameters ==

{|
|'''flags'''
|any of the flags used by [[SDL_Init]](); see [[SDL_Init]] for details.
|}

== Return Value ==

Returns If `flags` is 0 it returns a mask of all initialized subsystems,
otherwise it returns the initialization status of the specified subsystems.

== Code Examples ==

<syntaxhighlight lang='c++'>
/* Get init data on all the subsystems */
Uint32 subsystem_init;

subsystem_init = SDL_WasInit(SDL_INIT_EVERYTHING);

if (subsystem_init & SDL_INIT_VIDEO) {
    printf("Video is initialized.\n");
} else {
    printf("Video is not initialized.\n");
}
</syntaxhighlight>
<syntaxhighlight lang='c++'>
/* Just check for one specific subsystem */

if (SDL_WasInit(SDL_INIT_VIDEO) != 0) {
    printf("Video is initialized.\n");
} else {
    printf("Video is not initialized.\n");
}
</syntaxhighlight>
<syntaxhighlight lang='c++'>
/* Check for two subsystems */
Uint32 subsystem_mask = SDL_INIT_VIDEO | SDL_INIT_AUDIO;

if (SDL_WasInit(subsystem_mask) == subsystem_mask) {
    printf("Video and Audio initialized.\n");
} else {
    printf("Video and Audio not initialized.\n");
}
</syntaxhighlight>

== Related Functions ==

:[[SDL_Init]]
:[[SDL_InitSubSystem]]

----
[[CategoryAPI]], [[CategoryInit]]


