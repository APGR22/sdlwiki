<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_mutexP =
Use this function to lock ,,the,, ^a^ mutex.


== Syntax ==
```c++
int SDL_mutexP(SDL_mutex* mutex)
```

== Function Parameters ==
{|
|'''mutex'''
|^the mutex to lock^
|}

== Return Value ==
Returns 0 on success or a negative error code on failure; call [[SDL_GetError]]() for more information.

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
*<br/>[[SDL_mutexP]]() locks the mutex, which was previously created with [[SDL_CreateMutex]](). If the mutex is already locked by another thread then [[SDL_mutexP]]() will not return until the thread that locked it unlocks it (with [[SDL_mutexV]]()). If called repeatedly on a mutex, [[SDL_mutexV]]() must be called ^an^ equal ,,amount,, ^number^ of times to return the mutex to ^the/an^ unlocked state.

SDL also defines a macro <code>#define SDL_LockMutex(m) SDL_mutexP(m)</code>. <br/>*

''-or-''

[[SDL_mutexP]](m) and SDL_LockMutex(m) are equivalent.

''-or-'' The macro SDL_LockMutex(m) will call [[SDL_mutexP]](m).

<<Color2(green,I'm guessing this !LockMutex part will actually be omitted but I left it in since it was mentioned in the old wiki.)>>

== Related Functions ==
:[[SDL_CreateMutex]] *
:[[SDL_mutexV]] *

----
[[CategoryAPI]], [[CategoryMutex]]
