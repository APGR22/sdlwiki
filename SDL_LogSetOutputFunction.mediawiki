<!-- pragma section-numbers off -->
<!-- pragma camelcase off -->
'''DRAFT'''

= SDL_LogSetOutputFunction =
Use this function to replace the default log output function with one of your own.


== Syntax ==
```c++
void SDL_LogSetOutputFunction(SDL_LogOutputFunction callback,
                              void*                 userdata)
```

== Function Parameters ==
{|
|'''callback'''
|the function to call instead of the default; see [[#Remarks|Remarks]] for details
|-
|'''userdata'''
|a pointer that is passed to '''callback'''
|}

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
The function prototype for '''callback''' is:
 ```
void* SDL_LogOutputFunction(void*           userdata,
                            int             category,
                            SDL_LogPriority priority,
                            const char*     message)
```
: where its parameters are:
 ||<code>userdata</code>||what was passed as '''userdata''' to [[SDL_LogSetOutputFunction]]()||
 ||<code>category</code>||^the log category to query ???^||
 ||<code>priority</code>||the [[SDL_LogPriority]] ^to query^; see [[#priority|below]] for details||
 ||<code>message</code>||^the log output message ???^||
 <span id="priority"></span>
: <code>priority</code> may be one of the following ^or NULL ???^:
 <<Include(SDL_LogPriority, , , from="Start Include here.", to="##End Include here.")>>

 <<Color2(green,Should there be some reference to [[SDL_LOG_CATEGORY]] for <code>category</code>?)>>


''You can add useful comments here''

== Related Functions ==
:[[SDL_LogGetOutputFunction]]

----
[[CategoryAPI]], [[CategoryLog]]
