====== (This is the documentation for SDL3, which is under heavy development and the API is changing! [https://wiki.libsdl.org/SDL2/ SDL2] is the current stable version!) ======
= SDL_GetDisplayMode =

Get information about a specific display mode.

== Syntax ==

<syntaxhighlight lang='c'>
int SDL_GetDisplayMode(int displayIndex, int modeIndex, SDL_DisplayMode *mode);
</syntaxhighlight>

== Function Parameters ==

{|
|'''displayIndex'''
|the index of the display to query
|-
|'''modeIndex'''
|the index of the display mode to query
|-
|'''mode'''
|an [[SDL_DisplayMode]] structure filled in with the mode at <code>modeIndex</code>
|}

== Return Value ==

Returns 0 on success or a negative error code on failure; call
[[SDL_GetError]]() for more information.

== Remarks ==

The display modes are sorted in this priority:

* width -> largest to smallest
* height -> largest to smallest
* display_scale -> smallest to largest
* bits per pixel -> more colors to fewer colors
* packed pixel layout -> largest to smallest
* refresh rate -> highest to lowest

== Version ==

This function is available since SDL 3.0.0.

== Code Examples ==

<syntaxhighlight lang='c++'>
    int display_count = 0, display_index = 0, mode_index = 0;
    SDL_DisplayMode mode = { SDL_PIXELFORMAT_UNKNOWN, 0, 0, 0, 0 };

    if ((display_count = SDL_GetNumVideoDisplays()) < 1) {
        SDL_Log("SDL_GetNumVideoDisplays returned: %i", display_count);
        return 1;
    }

    if (SDL_GetDisplayMode(display_index, mode_index, &mode) != 0) {
        SDL_Log("SDL_GetDisplayMode failed: %s", SDL_GetError());
        return 1;       
    }
    SDL_Log("SDL_GetDisplayMode(0, 0, &mode):\t\t%i bpp\t%i x %i",
    SDL_BITSPERPIXEL(mode.format), mode.w, mode.h);
</syntaxhighlight>

== Related Functions ==

:[[SDL_GetNumDisplayModes]]

----
[[CategoryAPI]], [[CategoryVideo]]


