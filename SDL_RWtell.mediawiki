<!-- pragma section-numbers off -->
<!-- pragma camelcase off -->
{|
|<tablewidth="100%"style="color:#FF0000; ;text-align:center">DRAFT 
|}


= SDL_RWtell =
Use this function to perform a do-nothing seek to get the current offset in an SDL_RWops data stream.


== Syntax ==
```c++
Sint64 SDL_RWtell(struct SDL_RWops* context)
```

```{#!wiki comment
The old wiki says this has only 1 param - ctx - but both the old wiki and header also list the following {{{(ctx)->seek(ctx, 0, RW_SEEK_CUR)``` which appears to specify 3 params.  Does the SDL_RWtell macro call the seek function of the SDL_RWops struct then use the given '''context''' + an '''offset''' of 0  + '''whence''' of RW_SEEK_CUR as the settings to find the current location in the data?  I don't know how to properly represent that here.  See purple below for my attempt.
}}}}

== Function Parameters ==
{|
|'''context''' 
|a data stream containing the tell function ??? 
|}

== Return Value ==
*Returns the current offset in the stream.*

== Code Examples ==
*

```c++
#include <stdio.h>
#include "SDL_rwops.h"

int main(int argc, char *argv[])
{
  SDL_RWops *rw=SDL_RWFromFile("test.bin","r");
  if(rw==NULL)
  {
    fprintf(stderr,"Couldn't open test.bin\n");
    return(1);
  }

  SDL_RWseek(rw,0,RW_SEEK_END);
  fprintf(stderr,"Final position in test.bin: %d\n",SDL_RWtell(rw));
  SDL_RWclose(rw);
  return(0);
}
```
*

== Remarks ==
*<br/>This is not a built-in function. This is a macro that calls whatever seek function that happens to be pointed to in an SDL_RWops structure.<br/>*

```#!wiki comment
<<Color2(purple,[[SDL_RWtell]] calls the seek function in the SDL_RWops struct which uses the specified '''context''' pointer)>><<Color2(purple, ,, an '''offset''' of 0)>><<Color2(purple,, , and a '''whence''' of RW_SEEK_CUR to find the current location in the data.)>>
```
== Related Functions ==
: [[SDL_RWclose]] (Macro) *
: [[SDL_RWFromFile]] *
: [[SDL_RWread]] (Macro) *
: [[SDL_RWseek]](Macro) *
: [[SDL_RWwrite]] (Macro) *

```#!wiki comment
Should the current read and write functions (not macros) be listed?  Should macros be identified as macros here?
```
----
[[CategoryAPI]], [[CategoryIO]]
