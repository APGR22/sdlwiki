<!-- pragma section-numbers off -->
<!-- pragma camelcase off -->

'''DRAFT'''


= SDL_LockTexture =
Use this function to lock a portion of the texture for pixel access.


== Syntax ==
```c++
int SDL_LockTexture(SDL_Texture*    texture,
                    const SDL_Rect* rect,
                    void**          pixels,
                    int*            pitch)
```

== Function Parameters ==
{|
|'''texture'''
|the texture to lock for access, which was created with SDL_TEXTUREACCESS_STREAMING
|-
|'''rect'''
|an [[SDL_Rect]] structure representing the area to lock for access; NULL to lock the entire texture
|-
|'''pixels'''
|this is filled in with a pointer to the locked pixels, appropriately offset by the locked area
|-
|'''pitch'''
|this is filled in with the pitch of the locked pixels
|}

== Return Value ==
Returns 0 on success or a negative error code if the texture is not valid or was not created with SDL_TEXTUREACCESS_STREAMING; call [[SDL_GetError]]() for more information.

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
The pixels made available for editing don't necessarily contain the old data.  This is specifically ''not'' guaranteed.  

You must use [[SDL_UnlockTexture]]() to unlock the pixels and apply any changes.

== Related Functions ==
:[[SDL_UnlockTexture]]

----
[[CategoryAPI]], [[CategoryRender]]
