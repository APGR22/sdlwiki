<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->

= SDL_LockTexture =
Use this function to lock a portion of the texture for pixel access.


== Syntax ==
```c++
int SDL_LockTexture(SDL_Texture*    texture,
                    const SDL_Rect* rect,
                    int             markDirty,
                    void**          pixels,
                    int*            pitch)
```

== Function Parameters ==
{|
|'''texture'''
|the texture to lock for access, which was created with SDL_TEXTUREACCESS_STREAMING
|-
|'''rect'''
|a pointer to an [[SDL_Rect]] structure representing the area to lock for access; if '''rect''' is NULL the entire texture will be locked
|-
|'''markDirty'''
|if this is non-zero the locked area will be marked dirty when the texture is unlocked
|-
|'''pixels'''
|this is filled in with a pointer to the locked pixels, appropriately offset by the locked area
|-
|'''pitch'''
|this is filled in with the pitch of the locked pixels
|}

== Return Value ==
0 on success, or a negative error code if the texture is not valid or was created with SDL_TEXTUREACCESS_STATIC; call [[SDL_GetError]]() for more information.

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
If you don't want to mark the entire area dirty you can pass 0 for '''markDirty''' and then use [[SDL_DirtyTexture]]() to mark specific subareas dirty.

== Related Functions ==
:[[SDL_DirtyTexture]]
:[[SDL_UnlockTexture]]

----
[[CategoryAPI]], [[CategoryVideo]]
