<!-- pragma section-numbers off -->
<!-- pragma camelcase off -->

= SDL_WaitThread =
Use this function to wait for a thread to finish.


== Syntax ==
```c++
void SDL_WaitThread(SDL_Thread* thread,
                    int*        status)
```
== Function Parameters ==
{|
|'''thread''' 
|the SDL_Thread pointer that was returned from the [[SDL_CreateThread]]() call that started this thread
|-
|'''status''' 
|pointer to an integer that will receive the value returned from the thread function by its 'return', see [[#Remarks|Remarks]] for details 
|}

== Code Examples ==
```c++
Toggle line numbers

#include <stdio.h>
#include <SDL_thread.h>
#include <SDL_timer.h>

int TestThread( void *ptr );

int main(int argc, char *argv[])
{
        SDL_Thread *thread;
        int         threadReturnValue;

        printf("\nSimple SDL_CreateThread test:");

        // Simply create a thread
        thread = SDL_CreateThread( TestThread, (void *)NULL);

        if( NULL == thread )
           printf("\nSDL_CreateThread failed: %s\n", SDL_GetError());
        else
        {

           // Wait for the thread to complete. The thread functions return code will
           //       be placed in the "threadReturnValue" variable when it completes.
           //
           SDL_WaitThread( thread, &threadReturnValue);
           printf("\nThread returned value:%d", threadReturnValue);
        }

        return 1;
}

// Very simple thread - counts 0 to 9 delaying 50ms between increments
int TestThread( void *ptr )
{
        int        cnt;

        for(cnt=0;cnt<10;cnt++)
        {
                printf( "\nThread counter: %d", cnt);
                SDL_Delay(50);
        }

        // Return the final value to the SDL_WaitThread function above
        return cnt;
}
```

== Remarks ==
The return code for the thread function is placed in the area pointed to by '''status''', if '''status''' is not NULL. The return code is the value returned by the 'return' statement in the thread function.

Note that the thread pointer is freed by this function and is not valid afterward.

== Related Functions ==
: [[SDL_CreateThread]]

----
[[CategoryAPI]], [[CategoryThread]]
