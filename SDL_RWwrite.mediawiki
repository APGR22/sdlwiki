<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_RWwrite =
Use this function to write to a data source ''-or-'' *call the write function in an SDL_RWops structure.*


== Syntax ==
```c++
size_t SDL_RWwrite(struct SDL_RWops* context,
                   const void*       ptr,
                   size_t            size,
                   size_t            num)
```

== Function Parameters ==
{|
|'''context'''
|an SDL_RWops structure ^containing the write function^
|-
|'''ptr'''
|*a pointer to an area in memory to read data from*
|-
|'''size'''
|*the size of the memory blocks to write*
|-
|'''num'''
|*the exact number of memory blocks to write*
|}

<<Color2(green,I think '''ptr''' is an exception to the 'pointer rule'.)>>

== Return Value ==
Returns the number of objects written, or 0 at error or end of file; call [[SDL_GetError]]() for more information.

''-or-''

*>>On success,>> ,,it ,,returns the number of memory blocks you told it to write >> >>. If it couldn't write that exact number of blocks, or the write didn't work at all, it returns ,,-1,, ^a negative error code^*; call [[SDL_GetError]]() for more information.

== Code Examples ==
*
```c++
#include <stdio.h>
#include <string.h>
#include "SDL_rwops.h"

int main()
{
  int written;
  char *str="Hello World";

  SDL_RWops *rw=SDL_RWFromFile("test.bin","wb");
  if(rw==NULL)
  {
    fprintf(stderr,"Couldn't open test.bin\n");
    return(1);
  }

  written=SDL_RWwrite(rw,str,1,strlen(str));
  SDL_RWclose(rw);
  if(written<0)
  {
    fprintf(stderr,"Couldn't write to test.bin\n");
    return(2);
  }

  fprintf(stderr,"Wrote %d 1-byte blocks\n",written);
  return(0);
}
```
*

== Remarks ==
*<br/>This is not a built-in function. This is a macro that calls whatever write function happens to be in the SDL_RWops structure.<br/>*

[[SDL_RWwrite]] writes exactly '''num''' objects each of size '''size''' from the area pointed at by '''ptr''' to data source.  <<Color2(green,Should SDL_RWwrite have () like a function even though it's a macro?)>>

== Related Functions ==
:[[SDL_RWclose]] (Macro) *
:[[SDL_RWFromFile]] *
:[[SDL_RWread]] (Macro) *
:[[SDL_RWseek]](Macro) *

<<Color2(green,Should the current read and write functions (not macros) be listed?)>>

----
[[CategoryAPI]], [[CategoryIO]]
