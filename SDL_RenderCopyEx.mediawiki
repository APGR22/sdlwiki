<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->

= SDL_RenderCopyEx =
Use this function to copy a portion of the texture to the current rendering target, optionally rotating it by angle around the given center and also flipping it top-bottom and/or left-right


== Syntax ==
```c++
int SDL_RenderCopyEx(SDL_Renderer*   renderer,
                   SDL_Texture*    texture,
                   const SDL_Rect* srcrect,
                   const SDL_Rect* dstrect,
                   const double angle,
                   const SDL_Point *center,
                   const SDL_RendererFlip flip);
```

== Function Parameters ==
{|
|'''renderer'''
|the rendering context
|-
|'''texture'''
|the source texture; see [[#Remarks|Remarks]] for details
|-
|'''srcrect'''
|the source [[SDL_Rect]] structure or NULL for the entire texture
|-
|'''dstrect'''
|the destination [[SDL_Rect]] structure or NULL for the entire rendering target
|-
|'''angle'''
|an angle in degrees that indicates the rotation that will be applied to dstrect
|-
|'''center'''
|a pointer to a point indicating the point around which dstrect will be rotated (if NULL, rotation will be done aroud dstrect.w/2, dstrect.h/2)
|-
|'''flip'''
|a [[SDL_RendererFlip]] value stating which flipping actions should be performed on the texture
|}
== Return Value ==
Returns 0 on success or a negative error code on failure; call [[SDL_GetError]]() for more information.

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
The texture is blended with the destination based on its blend mode set with [[SDL_SetTextureBlendMode]]().

The texture color is affected based on its color modulation set by [[SDL_SetTextureColorMod]]().  

The texture alpha is affected based on its alpha modulation set by [[SDL_SetTextureAlphaMod]]().

== Related Functions ==
:[[SDL_SetTextureAlphaMod]]
:[[SDL_SetTextureBlendMode]]
:[[SDL_SetTextureColorMod]]
:[[SDL_RenderCopy]]

----
[[CategoryAPI]], [[CategoryRender]]
