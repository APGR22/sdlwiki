<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_MouseMotionEvent =
A structure that contains mouse motion event information.


== Data Fields ==
{|
|Uint32
|'''type'''
|SDL_MOUSEMOTION
|-
|Uint32
|'''windowID'''
|the window with mouse focus, if any
|-
|Uint8
|'''state'''
|the current button state
|-
|int
|'''x'''
|X coordinate, relative to window
|-
|int
|'''y'''
|Y coordinate, relative to window
|-
|int
|'''xrel'''
|relative motion in the X direction
|-
|int
|'''yrel'''
|relative motion in the Y direction
|}


== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
<<Color2(green,The following was taken from the old 1.2 wiki and may not be applicable to 1.3.)>>

[[SDL_MouseMotionEvent]] is a member of the [[SDL_Event]] structure and is used when an event of type SDL_MOUSEMOTION is reported.

An SDL_MOUSEMOTION event occurs whenever a user moves the mouse within the application window or when [[SDL_WarpMouseInWindow]]() is called. 

The button state can be interpreted using the SDL_BUTTON macro (see [[SDL_GetMouseState]]()).

If the cursor is hidden ([[SDL_ShowCursor]](0)) and the input is grabbed (SDL_WM_!GrabInput(SDL_GRAB_ON)), then the mouse will give relative motion events even when the cursor reaches the edge of the screen. This is currently only implemented on Windows and Linux/Unix-alikes. 

<<Color2(green,There are currently no pages for SDL_WarpMouse or SDL_WM_!GrabInput.  Do they still exist in 1.3?  Is [[SDL_WarpMouseInWindow]] the appropriate replacement for SDL_WarpMouse?  If it is should it be listed in RFs also?)>>

== Related Enumerations ==
:[[SDL_EventType]]

== Related Structures ==
:[[SDL_MouseButtonEvent]]
:[[SDL_MouseWheelEvent]]

== Related Functions ==

----
[[CategoryStruct]], [[CategoryEvents]]
