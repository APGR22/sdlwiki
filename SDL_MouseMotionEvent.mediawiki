<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
'''DRAFT'''

= SDL_MouseMotionEvent =
A structure that contains mouse motion event ,,structure,, ^information^ (event.motion.*).


== Data Fields ==
{|
|Uint8
|'''type'''
|SDL_MOUSEMOTION
|-
|Uint32
|'''windowID'''
|the window with mouse focus, if any
|-
|Uint8
|'''which'''
|the mouse device index
|-
|Uint8
|'''state'''
|the current button state
|-
|int
|'''x'''
|x coordinate, relative to window
|-
|int
|'''y'''
|y coordinate, relative to window
|-
|<style="color: #808080;">int
|<style="color: #808080;">'''z'''
|<style="color: #808080;">z coordinate, for future use
|-
|int
|'''pressure'''
|pressure reported by tablets
|-
|int
|'''pressure_max'''
|maximum value of the pressure reported by the device
|-
|int
|'''pressure_min'''
|minimum value of the pressure reported by the device
|-
|<style="color: #808080;">int
|<style="color: #808080;">'''rotation'''
|<style="color: #808080;">for future use
|-
|<style="color: #808080;">int
|<style="color: #808080;">'''tilt_x'''
|<style="color: #808080;">for future use
|-
|<style="color: #808080;">int
|<style="color: #808080;">'''tilt_y'''
|<style="color: #808080;">for future use
|-
|int
|'''cursor'''
|the cursor being used in the event
|-
|int
|'''xrel'''
|the relative motion in the X direction
|-
|int
|'''yrel'''
|the relative motion in the Y direction
|}

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
''You can add useful comments here''

== Related Functions ==

----
[[CategoryStruct]]
