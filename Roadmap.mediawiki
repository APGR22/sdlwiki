= SDL 1.3 Roadmap =

== Introduction ==
This is a list of features which are in progress for the SDL 1.3 release.  The features are organized by subsystem and assigned to developers.


== Video ==

=== Complete ===
* <<Color2(green, Sam: Add support for multiple windows)>>
* <<Color2(green, Sam: Create 3D accelerated texture based rendering API)>>

=== Required ===
* ???: Implement landscape mode for iPhone port
* Sam: Support for multiple displays
* <<Color2(green, Windows)>>
* <<Color2(green, Mac OS X)>>
* Linux
* Sam: Support for selecting video mode refresh rate
* <<Color2(green, Windows)>>
* <<Color2(green, Mac OS X)>>
* Linux
* ???: Add OpenGL 3.0 context support

=== Wishlist ===
* <<Color2(gray, Create desktop video mode change notification)>>

== Audio ==

=== Complete ===
* <<Color2(green, Ryan: Implement support for recording API)>>

== Mouse Input ==

=== Required ===
* Ryan: Support for multiple mice
* Q: What is the mapping of individual mice to pointers?  Is there a "master pointer" that multiple mice share and then events for the individual mice?  Is there a dual mode, where you have a single pointer that all mice affect, and you can switch to multiple pointers, each affected by a single mouse?

== Keyboard Input ==

=== Required ===
* <<Color2(green, Sam: Create new text input event separate from key events)>>
* Q: When you're enabling or disabling text events via keystroke, how do you ignore the text generated by the key that is toggling text input?
    A: Key events are guaranteed to happen first
* Q: How do you handle key repeat?
* Sam/Jiang: Implement IME API and support
* Windows
* <<Color2(green, Mac OS X)>>
* Linux

== Joystick Input ==

=== Complete ===
* <<Color2(green, Edgar: Create and implement Force Feedback API)>>
* <<Color2(green, Windows)>>
* <<Color2(green, Mac OS X)>>
* <<Color2(green, Linux)>>

== Multi-touch Input ==

=== Required ===
* ???: Create and implement Multi-touch API

== Multi-threading / CPU info ==

=== Complete ===
* <<Color2(green, Sam: Create and implement API for getting the number of CPUs)>>
* <<Color2(green, Windows)>>
* <<Color2(green, Mac OS X)>>
* <<Color2(green, Linux)>>

=== Required ===
* Sam: Create and implement API for thread priority
* Windows
* Mac OS X
* Linux
* Sam: Create and implement API for thread processor affinity
* Windows
* Mac OS X
* Linux

== Timers ==

=== Required ===
* Add higher precision timers for profiling

== General ==

=== Required ===
* Sam: Public license for SDL_compat.c, tests, and SDL_main*
