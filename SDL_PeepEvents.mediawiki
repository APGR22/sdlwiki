<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->
{|
|<tablewidth="100%"style="color: rgb(255, 0, 0); text-align: center;">DRAFT 
|}


= SDL_PeepEvents =
Use this function to check the event queue for messages and optionally return them.


== Syntax ==
```c++
int SDL_PeepEvents(SDL_Event*      events,
                   int             numevents,
                   SDL_eventaction action,
                   Uint32          minType,
                   Uint32          maxType)
```

== Function Parameters ==
{|
|'''events''' 
|^the [[SDL_Event]] queue to query^???
|-
|'''numevents''' 
|^the number of events in the queue^???; see [[#Remarks|Remarks]] for details 
|-
|'''action''' 
|^how to handle the events in the queue^; see [[#action|Remarks]] for details 
|-
|'''minType''' 
|^the minimum number of events of a specified type^ ??? 
|-
|'''maxType''' 
|^the maximum number of events of a specified type^ ??? 
|}

== Return Value ==
Returns the number of events actually stored or a negative error code on failure; call [[SDL_GetError]]() for more information.

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
<span id="action"></span> '''action''' may be any of the following <<Color2(green,(from enum SDL_eventaction which has no page))>>:
{|
|SDL_ADDEVENT 
|up to '''numevents''' events will be added to the back of the event queue 
|-
|SDL_PEEKEVENT 
|up to '''numevents''' events at the front of the event queue, within the specified minimum and maximum type, will be returned and will not be removed from the queue
|-
|SDL_GETEVENT 
|up to '''numevents''' events at the front of the event queue, within the specified minimum and maximum type, will be returned and will be removed from the queue
|}


<<Color2(green,The below is taken directly from the header.  The info has been transferred to the table above as an optional way of being presented.  Which should be kept?)>>

If '''action''' is SDL_ADDEVENT, up to '''numevents''' events will be added to the back of the event queue.

If '''action''' is SDL_PEEKEVENT, up to '''numevents''' events at the front of the event queue, within the specified minimum and maximum type, will be returned and will not be removed from the queue.

If '''action''' is SDL_GETEVENT, up to '''numevents''' events at the front of the event queue, within the specified minimum and maximum type, will be returned and will be removed from the queue.


{i} This function is thread-safe.

*<br/>
<<Color2(green,Is the following true in 2.0?)>> You may have to call [[SDL_PumpEvents]]() before calling this function. Otherwise, the events may not be ready to be filtered when you call [[SDL_PeepEvents]]().<br/>*

== Related Functions ==
: [[SDL_PollEvent]] *
: [[SDL_PumpEvents]] *
: [[SDL_PushEvent]] *

----
[[CategoryAPI]], CategoryEvents
