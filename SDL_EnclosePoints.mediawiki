<!-- pragma section-numbers off -->
<!-- pragma disable-camelcase -->

= SDL_EnclosePoints =
Use this function to calculate a minimal rectangle enclosing a set of points.


== Syntax ==
```c++
SDL_bool SDL_EnclosePoints(const SDL_Point* points,
                           int              count,
                           const SDL_Rect*  clip,
                           SDL_Rect*        result)
```

== Function Parameters ==
{|
|'''points'''
|a pointer to an array of [[SDL_Point]] structures representing points to be enclosed
|-
|'''count'''
|the number of structures in the '''points''' array
|-
|'''clip'''
|an [[SDL_Rect]] used for clipping or NULL to enclose all points; see [[#Remarks|Remarks]] for details
|-
|'''result'''
|a pointer to an [[SDL_Rect]] to be filled in
|}


== Return Value ==
Returns SDL_TRUE if any points were enclosed or SDL_FALSE if all the points were outside of the clipping rectangle.

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
If '''clip''' is not NULL then only points inside of the clipping rectangle are considered.

----
[[CategoryAPI]], [[CategoryRect]]
