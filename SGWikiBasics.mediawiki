<!-- pragma section-numbers off -->
<!-- pragma camelcase off -->
<!-- acl All:read -->
'''DRAFT'''

<<Color2(red,Please note that the formatting of this page is currently in transition.  It will look a little funny/disorganized for a while as I get it all shifted over.  I hope you will bear with me.  I'll get it all adjusted as quickly as possible. Thanks!)>>

= Style Guide: Wiki Basics =

<span id="ToC"></span>


== Getting Started ==

<!> '''In general, existing content, including markup, should not be modified or removed.'''

=== Opening An Editor ===
If a page can be edited you will see two options to choose from in the left column:
 1. <<Color2(blue,Edit (Text))>>
  The Text editor provides more power/flexibility for editing than the GUI editor but requires that you know the wiki markup.  Use the Text editor to see the content with raw markup.  You will need to use the Preview feature to view the content as it will appear when saved.
 (!) Specific markup instructions in this guide are for use with the Text editor but should also work in the GUI editor.<br/>
 For information on wiki markup not included here, or other MoinMoin-specific questions, please see the [http://wiki.libsdl.org/moin.cgi/HelpOnEditing wiki help documentation].

 1. <<Color2(blue,Edit (GUI))>>
  The GUI editor provides buttons, much like a simple word processor, to add formatting markup such as bolding text, making a table, or creating a numbered list.  It is simpler to use than the Text editor but does not provide buttons for all the possible markup.  Use the GUI editor to see the content appear roughly as it would on the screen as you edit or if you do not know or want to use the wiki markup.
 (!) The GUI editor is fairly self-explanatory; however, if you require further assistance, see [http://wiki.libsdl.org/moin.cgi/HelpOnGraphicalEditor HelpOnGraphicalEditor] for more detailed instructions.

Note that some formatting will appear slightly different in preview mode than on the finished screen.


=== Saving Your Changes ===
Before you save your changes please include a note in the Comment field below the editing box that summarizes what you have done.
 ''Sample comments'': 
* added comment to end of remarks
* added code example to C++ section
* remarked on use of function with [sound card model]

{i} Especially when using the text editor, use the <<Color2(blue,Preview)>> function in the left sidebar before saving your changes to ensure that the markup you have included is producing the desired result as well as to scan for errors in a different view.

When you have finished adding your content and filling in the Comment field, and are satisfied with the formatting, use the <<Color2(blue,Save Changes)>> function in the left sidebar to save your changes.

'''Automatic Backup of Drafts'''<br/>
~-(from: [http://wiki.libsdl.org/moin.cgi/HelpOnEditing Help On Editing])-~

 Every time you are in the editor and use the "Preview", "Spell Check", "Cancel" or "Save Changes" buttons, moin saves a draft copy of your work internally. Use preview often!

 If you hit "cancel" accidentally, your machine crashes, or the browser window was accidentally closed, then the automatic backup of your draft may be easily recovered.

 To recover that draft, you simply edit that page again. If there is a draft, an alert message will be in the message box [at the top] and a "load draft" button will be present [in the left column]. Clicking the "load draft" will load your saved draft into the editor box replacing the current revision already loaded. You can continue editing the loaded draft, but this time try to save it at the end. :)

 (!) Don't use the "preview", "spell check", "save changes" or "cancel" buttons on that page before "load draft" or you will overwrite your old draft with a new one.

 If you successfully save a page, the internal draft copy of it is not needed any more and will be deleted. 

~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>

== Style Guide Terminology ==
Some terms used in the style guides are intended to have specific meanings or purposes that may or may not be as intuitively clear as we hope.  Explanations are provided here to avoid any potential confusion.
<span id="api"></span>
: '''API Page'''
: Refers to any Function, Structure, or Enumeration page.
<span id="category"></span>
: '''Category Page'''
: Refers to the front page of each major category found in the [http://wiki.libsdl.org/moin.cgi/APIByCategory API by Category] list.
 ||<tablewidth="50%" style="color: #FF0000;" :> DRAFT||
: Any page with <<Color2(red,DRAFT)>> at the top is incomplete.  It should not be used as a formatting example until <<Color2(red,DRAFT)>> is removed.  There may be missing or extra information, unusual formatting, colors, markup, notes, etc. on these pages.  They will all be cleaned up by the time <<Color2(red,DRAFT)>> is removed.  Please bear with us while they are in place as they help to speed up the editing process.  ''Thank you!''
: '''''If...'''''
: Found at the beginning of some detailed style guide sections, this indicates options for you to choose from.  Select the one(s) that best suits your content given the context on the page you are editing and follow the related instructions. (See ''Action'' through ''Example'' below.)  
: In some cases a portion of the statement following ''If'' will be __underlined__ to help you quickly scan for the option(s) that you need.
: '''''Action'':'''
: The instructions immediately following ''Action'' indicate what you should do to apply the style guide guidelines.  In some cases you will select an ''Action'' that is relevant to your particular content (usually from a table of options).  In many cases everyone making a certain type of edit should follow the same ''Action'' in which case no options will be given.
: Sometimes ''Action'' will include a number (ie: ''Action 2'') to indicate that there is more than one way to achieve the same result.  You should choose whichever option suits you best for the circumstances.
: ''Action'' is almost always followed by ''Markup'' or ''How'' and may also be followed by any of the other markers (see below).
: /!\ Please read any ''Note'' or ''<<Color2(red,Important!)>>'' comment related to the ''Action''(s) you choose.  If you are otherwise familiar with the wiki and it's markup the other sections can usually be skipped unless you are having trouble.
: '''''Markup'':'''
: The instructions immediately following ''Markup'' indicate the critical markup that would be used in the text editor to complete the ''Action'' above it.  If you prefer another way to achieve the same result, or prefer to use the GUI editor this information should be used to clarify the correct formatting for you to match.
: Sometimes ''Markup'' will include a number (ie: ''Markup 2'') to indicate that there is more than one way to achieve the same result.  You should choose whichever option suits you best for the circumstances.
: '''''How'':'''
: Usually used instead of ''Markup'', the information immediately following ''How'' describes specific actions to be taken outside of the editing window in order to complete the ''Action'' above it.
: '''''Note'':'''
: The instructions immediately following ''Note'': should be taken into consideration as necessary.  
: '''''<<Color2(red,Important!)>>'''''
: Similar to a ''Note'', but indicates that the noted information is especially important and should be heeded by all Contributors. 
: '''''Example'':'''
: Provides a direct example of the markup or points to a place in the wiki where the related ''Action'' and ''Markup'' can be observed.
<br/>
~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>



== General Guidelines ==

This section contains general information that applies to nearly every page in the wiki.  Please review this section periodically for updates.  

''<<Color2(red,Important!)>>'' Do not remove DRAFT from any page!

''<<Color2(red,Important!)>>'' Do not change the Category links at the bottom of a page.

The top of (nearly) every page begins with the following, which should not be edited:
  ```
#pragma section-numbers off
#pragma camelcase off
```
 Any new or in progress page will also include:
 ```
||<tablewidth="100%" style="color: #FF0000;" :> DRAFT||
```
<br/>
~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>


<span id="markup"></span>
== Some Markup Basics ==
Below is a summary of the most commonly used markup in this wiki and some hints and tricks for using it.

<!> '''The following is provided for your convenience and is meant to be general information.  The other [http://wiki.libsdl.org/moin.cgi/Contributing#guides Style Guides] describe where this formatting should be applied and where exceptions may exist.'''

A good place to look for additional information on MoinMoin wiki markup is  [http://wiki.libsdl.org/moin.cgi/HelpOnMoinWikiSyntax HelpOnMoinWikiSyntax].  Also see the Editor Hints in the left sidebar when in Edit mode for some of the most common markup.  



<span id="spacing"></span>
=== Spacing ===
Both vertical and horizontal spacing can be rendered differently depending upon the combination of formatting markup that is used.  If your formatting is not working out the way you want check the notes below on other formatting that you have used nearby that may be affecting how the local formatting is interpreted.
 ''Example'': If you try to pick up a numbered list down the page after using unnumbered lines at the same indent level, the next number in the numbered list will count the unnumbered lines.
: See [[#problems1|Some Known Problems and Solutions]] below for notes on known markup misbehavior.


<span id="indent"></span>
==== Indenting ====
: ''Markup'': Place blank spaces at the beginning of a line of text to create indents. (this line has 1 space)
* Use one space for each indent level desired. (this line has 2 spaces)

: ''Note'': Use a period (.) after the spaces and before the text (usually separated by a space after but not necessary) to ensure that the indent does not become a bullet or numbered list.  Note that this markup will sometimes resolve problems when the spacing from line to line is not what you expected. (this line has 2 spaces and a starting period)

: ''Example'': ``` . This line starts with a period   ``` 
  ''generates''<br/>
: This line starts with a period

: ''<<Color2(red,Important!)>>'' Indenting often leads to inadvertent creating of a list.  Lists follow very limiting, sometimes difficult to figure out, rules.  See [[#lists|Lists]] below if your indenting is not working the way you think it should.


<span id="break"></span>
==== Hard Line Break ====
 ''Markup'': ```<br/>```
* Place the above markup wherever you want to force the following text onto the next line but keep it in the same paragraph.<br/>
* ''Note'': You cannot change indent level immediately following a hard line break.  (The next line is still part of the same paragraph.)
: ''Example'': Typing the following in the text editor ```
  1 first line<<BR>>  2 this line typed on same line after hard line break markup, same indent<<BR>>   3 this line typed on same line after hard line break markup, +1 indent<<BR>>  4 this line typed on same line after hard line break markup, -1 indent<<BR>>  . 5 this line typed on same line after hard line break markup, same indent with period<<BR>>6 this line typed on same line after hard line break markup without any indent
```
   ''generates''
: 1 first line<br/>  2 this line typed on same line after hard line break markup, same indent<br/>   3 this line typed on same line after hard line break markup, +1 indent<br/>  4 this line typed on same line after hard line break markup, -1 indent<br/>  . 5 this line typed on same line after hard line break markup, same indent with period<br/>6 this line typed on same line after hard line break markup without any indent


<span id="vertical"></span>
: ''Note'': Spaces between lines and paragraphs (which may be individual lines) are parsed with different spacing depending upon the context (especially relative indent level).  It may take some playing around with the markup to get the spacing you want, or it may be that you will have to accept a certain amount of pre-determined spacing between lines.
: ''Example'': Typing the following in the text editor ```
 1 hard return followed by next line same indent
 2 hard return followed by next line +1 indent
  3 hard return followed by next line same indent using period
  . 4 hard return followed by next line same indent, no period
  5 hard return followed by next line -1 indent
 6 hard return after hard line break markup, followed by next line same indent<<BR>>
 7<<BR>> 8 next line typed on same line after hard line break markup, same indent
```
   ''generates''
: 1 hard return followed by next line same indent
   2 hard return followed by next line +1 indent
    3 hard return followed by next line same indent using period
: 4 hard return followed by next line same indent, no period
    5 hard return followed by next line -1 indent
   6 hard return after hard line break markup, followed by next line same indent<br/>
   7<br/> 8 next line typed on same line after hard line break markup, same indent

* To ensure that the next line is treated as a separate line (not necessarily a separate paragraph!)
   a. use two consecutive hard returns (```Enter key```)
    ~-''Note'': this will leave a larger space between lines (usually a double-space) but it is treated as a new paragraph-~
   a. use a [[#break|hard line break]]
   a. [[#indent|indent]] more (farther right)
   a. use a [[#indent|period]] at the beginning of the line after indenting the same amount
   a. [[#indent|indent]] less (farther left)

~-[[#ToC|Return to Table of Contents]]-~


<span id="lists"></span>
==== Lists ====
<<Color2(red,''Important!'')>> Anything that interrupts a list, except a list item indented further right, will potentially end the list!  This may affect the indenting, count, or symbols if you try to restart the list below the interruption.  This may or may not be able to be overcome, so be careful with adding anything that interrupts a list!

Bullet Lists
: ''Markup'': Begin a line with a space followed by an asterisk to create a bulleted line of text (space after asterisk is optional but seems to be preferred)
: ''Example'': ```  * First line of bullet list```<br/>
   ''Generates'':
* First line of bullet list<br/>
Numbered Lists
: ''Markup'': Begin a line with a space followed by the number 1 and a period (or choose another number format such as i or a).
: ''Note'': Each line that should be part of the list begins with the same starting number. The wiki will generate sequential numbers in preview mode or after saving.
: ''Example'': ```
 1. First line of numbered list
 1. Second line of numbered list
```
  ''Generates'':
  1. First line of numbered list
  1. Second line of numbered list

 More wiki markup for lists can be found at [http://wiki.libsdl.org/moin.cgi/HelpOnLists HelpOnLists]


<span id="problems1"></span>
==== Some Known Problems and Solutions ====

<<Color2(green,This is a new section and is currently undergoing revisions.  Please forgive any incomplete or displaced portions and odd/inconsistent formatting.)>>


{|
|
|<bgcolor="#EDEDED">''Problem Category'': Vertical spacing isn't working properly
|-
|<( |3 30%>''Problem'': My text is on another line in the editor but grouped with the previous line in the preview/saved version
|''Cause'': Using a hard return (Enter key) at the end of a line is often '''not''' parsed as a line break.
|-
|''Solution 1'': Press the Enter key ''twice'' to put a space between paragraphs
|-
|''Solution 2'': Use a [[#break|Hard Line Break]].
|-
|<( |5 30%>''Problem'': There is too much/little space between lines of text
|''Cause'': Most of the vertical spacing in this wiki is fixed and is determined based on other formatting choices.
|-
|''Solution'': You can force __additional__ space between lines of text using [[#break|Hard Line Breaks]].
|-
|''Note'': You '''cannot''' force __less__ space between lines of text in separate paragraphs.  The only option for keeping lines of text close together is to use [[#break|Hard Line Breaks]] to keep lines within a paragraph.<br/><<Color2(red,''Important!'')>> There are limits to how you can change formatting within a paragraph.
|-
|''Note'': Indenting can affect vertical spacing.  See ''[[#vertical|Note]]'' above for details.
|}

{|
|
|<bgcolor="#EDEDED">''Problem Category'': My list isn't working properly
|-
|<( |9 30%>''Problem'': The __numbering__ in my list started over
|''Cause'': Most likely your numbering restarted because something broke the list into two parts.
|-
|''Solution 1'': Remove the interfering item or change it's indent to be subordinate in the list (add more spaces to indent more).
|-
|''Note'': This is the most successful solution.
|-
|''Solution 2'': Try forcing a new starting number/letter.
|-
|''Markup'': place <code>#value</code>, where # is the hash symbol and <code>value</code> is a number (like 2, 3, 4...; '''not''' the character you want), immediately after the starting numbering markup.
|-
|''Example'': ``` 1.#4 text``` should force the list item to begin with the number 4.<br/>{{{a.#4 text}}} should force the list item to begin with the letter d.
|-
|<<Color2(red,''Important!'')>> This fix does not always work!!!
|-
|''Solution 3'': Put a blank line (Enter key) between list items and then force a number (or other sequential) value by using the ''Markup'' from ''Solution 2'' above.
|-
|''Example'': See the Basic Format section of [http://wiki.libsdl.org/moin.cgi/SGTutorials#Basic_Format SGTutorials] then go into edit mode to see the markup.
|-
|<( |4 30%>''Problem'': The __indenting__ of my next list item is wrong
|''Cause'': The list is interrupted by another item (like a box of code) with __less indent__ (farther left) than the previous line of the list
|-
|''Result'': The interfering block forces the end of a list so the list begun after it is treated as a new list.  It also seems to default to a first level indent after an interruption of this type regardless of the number of spaces you actually put before your next line.
|-
|''Solution'': One __possible__ workaround is to place a blank line containing a ```space(s) period space``` ( . ) between the interfering content and the next line.<br/>~-''Note'': This seems to allow the wiki parser to interpret the indent count on the next line correctly but likely won't continue the list.  It does not always work!-~
|-
|''Note'': It may be necessary to indent one level ''less'' (farther left) than the line that is not being parsed correctly.  For example, if you want a line following an interruption to be at 3 indents, put the space-period-space fix immediately above it at 2 indents (ie: ```space space period space;  . ```).
|-
|<( |3 30%>''Problem'': I want to use a __mixed list__ where bullets follow numbers on the same indent level (or similar) but it just keeps numbering
|''Cause'': This wiki seems to parse lists based on how they start and where they end.  If they are not broken/ended it seems to ignore the actual intervening markup (except usually lines starting with a period).
|-
|''Solution'': The same workarounds as above may or may not be able to resolve this issue as well.  Your goal is to end one list and begin the next with new formatting.  You may have to try several tricks to make this happen.
|}

<<Color2(red,''Important!'')>> Some list breaks cannot currently be fixed so you should be very careful when interrupting a list as it may force formatting you will not want.<br/>See [http://moinmo.in/MoinMoinBugs/MixedNumberedAndUnorderedLists?highlight=%28lists%29 Mixed Lists] for some discussion and examples of problems.<br/>~-''Note'': The contents at this link may change at any time and this link may not always be up to date.-~



~-[[#ToC|Return to Table of Contents]]-~

<br/>
<br/>
<span id="formatting"></span>
=== Text Formatting ===
''Note'': Formatting markup can usually be nested/grouped, but the order it is used in may affect whether it works as desired.  Try using multiple formatting tags in a different order or check the help if you have trouble.

'''<<Color2(red,''Important!'')>> The wiki's default font type, font colors, and font sizes should be used in almost all cases.'''

{|
|<bgcolor="#EDEDED">Style
|<bgcolor="#EDEDED">Details
|-
|<( |2 30%>'''Bold'''
|''Markup'': Place three apostrophes surrounding text to be bolded, without a space between markup and text.
|-
|''Example'': ```'''bold text'''``` generates '''bold text'''
|-
|<( |2 30%>''Italics''
|''Markup'': Place two apostrophes surrounding text to be italicized, without a space between markup and text.
|-
|''Example'': ```''italics text''``` generates ''italics text''
|-
|<( |3 30%><code>Monospace</code>
|''Markup'': Place a backtick on either side of the text, without a space between markup and text.
|-
|''Note'': This may resemble inline code (see below) in many cases, but will not behave the same.
|-
|''Example'': ```<code>monospace text</code>``` generates <code>monospace text</code>
|-
|<( |5 30%>```Code (or Verbatim Text)```
|''Markup'': Use three curly brackets surrounding text to be rendered as code.
|-
|''Markup 1'': Place the brackets inline with the text to display the code formatting inline.
|-
|See ''[[#example1|Example 1]]'' below the table.
|-
|''Markup 2'': Place the brackets above and below the text to display the code formatting inside a box.
|-
|See ''[[#example2|Example 2]]'' below the table.
|-
|<( |6 30%><<Color2(red,C)>><<Color2(orange,o)>><<Color2(yellow,l)>><<Color2(green,o)>><<Color2(blue,r)>><<Color2(indigo,e)>><<Color2(violet,d)>> <<Color2(brown,T)>><<Color2(pink,e)>><<Color2(grey,x)>><<Color2(purple,t)>>
|<<Color2(red,''Important!'')>> Please use colored text sparingly if at all. As a general convention we use <<Color2(blue,blue)>> to represent links (whether they actually behave as links or not), so please reserve that color for such purposes.
|-
|''Note'': We have the Color2 macro installed. It will colorize text inside or outside of tables.
|-
|''Markup'':```<<Color2(colorname,text to be colorized)>>``` where {{{colorname}}} may be most any simple color name like blue or red or green
|-
|''Note'': If ```text to be colorized``` must contain commas each section must be colorized separately, breaking at each comma.
|-
|See ''[[#example3|Example 3]]'' below table.
|-
|''Note'': There are other options for colorizing text (and backgrounds) within tables.  See [[#tables|Tables]] below for more info.
|}

<span id="example1"></span>
: ''Example 1'':
  ```{
{{{Verbatim text as it should be typed, appear as code, or show markup. If it is too long for the line it will not wrap.```
}}}}
: ''Generates''
  ```Verbatim text as it should be typed, appear as code, or show markup. If it is too long for the line it will not wrap.```

<span id="example2"></span>
: ''Example 2'':
  ```{
{{{
Verbatim text as it should be typed, appear as code, or show markup. This will word-wrap if it is too long for one line.
```
}}}}
: ''Generates''
  ```
Verbatim text as it should be typed, appear as code, or show markup. This will word-wrap if it is too long for one line.
```

<span id="example3"></span>
: ''Example 3'': 
: ''Correct'' 
  ```
<<Color2(purple,A sentence that contains commas,)>> <<Color2(purple,such as this one,)>> <<Color2(purple,must be broken into parts or the text before the first comma will not appear when parsed.)>>
```
: ''Generates''
: <<Color2(purple,A sentence that contains commas,)>> <<Color2(purple,such as this one,)>> <<Color2(purple,must be broken into parts or the text before the first comma will not appear when parsed.)>>
: ''Incorrect''
  ```
<<Color2(purple,A sentence that contains commas, such as this one, must be broken into parts or the text before the first comma will not appear when parsed.)>>
```
:''Generates''
: <<Color2(purple,A sentence that contains commas, such as this one, must be broken into parts or the text before the first comma will not appear when parsed.)>>
: ''Note'': the beginning of the sentence is missing in this version

More wiki markup for text formatting can be found at [http://wiki.libsdl.org/moin.cgi/HelpOnFormatting HelpOnFormatting].

~-[[#ToC|Return to Table of Contents]]-~
<br/>
<br/>

<span id="hyperlinks"></span>
=== Hyperlinks ===
<<Color2(red,''Important!'')>>  Although this wiki automatically creates some hyperlinks, in most cases for the SDL functions, enumerations, and structures it is unable to interpret the text correctly so we have disabled automatic linking via CamelCase recognition using the following markup at the top of every page:
 ```
#pragma camelcase off
```
'''Therefore, it is necessary for you to manually create most hyperlinks!'''
: ''Note'': If a hyperlink is automatically created where you __don't__ want one check to ensure that this <code>#pragma</code> markup is correct at the top of the page.  If it is not, please correct or add it.  This should resolve the issue if it is related to CamelCase text.

{|
|<( |3 30%>''If'' you reference something that __has a page in the wiki__
|''Action'': Always create a hyperlink to any existing API page.  It is preferable to create a link to any page in the wiki that is referenced.
|-
|''Note'': Include () after a function name, outside the link, except in the Related Functions section of a page.  Do not use parens for structures or enumerations.
|-
|See the [[#linktype|next table]] for how to create different links.
|-
|<( |2 30%>''If'' you reference something that __does not have a page__ in the wiki
|''Action'': Do not create hyperlinks to pages that do not already exist unless you are 100% sure the page will exist very soon after creating the link.
|-
|''Hint'': If you are unsure whether a page exists check the [http://wiki.libsdl.org/moin.cgi/CategoryAPI API By Name] page or try typing it into the browser.
|-
|<( |2 30%>''If'' you reference an __outside page or email address__
|''Action'': In most cases the wiki will automatically create the link for you.
|-
|''Note'': See the [[#linktype|next table]] for options.
|}


<span id="linktype"></span>
{|
|<bgcolor="#EDEDED">Type of link
|<bgcolor="#EDEDED">How to create it
|-
|<( |3 30%>Link to another page __within the wiki__
|''Markup'': Enclose the page name in double brackets:<br/> ```[[pagename]]```
|-
|''Note'': It is not necessary to include the wiki address ```http://wiki.libsdl.org/moin.cgi/``` for intra-wiki pages.
|-
|''Example'':  ```[[SDL_VideoInit]]()``` generates [[SDL_VideoInit]]()
|-
|<( 30%>Link to an __outside page or email address__
|''Markup'': Type or paste in the address.  The wiki should auto-recognize and link these standard forms.
|-
|<( |3 30%>Link with __alternate link text__
|''Markup'': Enclose the standard address (as above) followed by a pipe and the alternate link text in double brackets to create linked text that is different from the actual address.
|-
|''Example'': ```[[normal link address|alternate text]]``` produces [[normal link address|alternate text]]
|-
|''Note'': Alternate link text is generally optional but preferred in most cases other than API page links to make the link cleaner, shorter, and/or to make it more desirable grammatically than the actual address.
|-
|<( |2 30%>Link __referencing the header files__
|''<<Color2(red,Important!)>>'' Replace the version number (12-digit alpha-numeric code) with <code>default</code> in the address if the link should be to the most current version rather than to a specific version of the header file.
|-
|''Example'': http://hg.libsdl.org/SDL/file/ef1db08c40ac/include/SDL_atomic.h should be changed to http://hg.libsdl.org/SDL/file/default/include/SDL_atomic.h so the link always points to the most current file.
|-
|<( |3 30%>Link to an __anchor__ (or most any unique text) __on the same page__
|''Markup'': ```[[#anchorname|link text]]``` where {{{anchorname}}} is a previously created [[#anchors|anchor]] or a unique bit of text on the page (but not a header) and {{{link text}}} is the text that will actually appear as the link.
|-
|''Example'': ```[[#hyperlinks|how to hyperlink]]``` creates [[#hyperlinks|how to hyperlink]] (try clicking the link to see it in action)
|-
|''Note'': In the case of anchors it is important to use the alternate text, even if it is identical to the anchor name, to make the link look nice.  Without it the # appears in the link.
|-
|<( |2 30%>Link to an __anchor on another page__
|''Markup'': Insert the page address before the # in the address section of an anchor link.<br/>```[[address#anchor|optional alternate text]]```
|-
|''Example'': ```[http://wiki.libsdl.org/moin.cgi/Contributing#guides Style Guides]``` creates the following link with alternate text and that takes you to that anchor on the other page [http://wiki.libsdl.org/moin.cgi/Contributing#guides Style Guides]
|}

 More wiki markup for tables can be found at [http://wiki.libsdl.org/moin.cgi/HelpOnLinking HelpOnLinking]

~-[[#ToC|Return to Table of Contents]]-~


<span id="anchors"></span>
==== Anchors ====
''Markup'': ```<span id="anchorname"></span>```
* Place the above markup in the location where you wish to create an anchor, replacing ```anchorname``` with a word (or phrase) that has meaning in that application.
* Anchors will not appear on the saved page or take space on the page but can be referenced in [[#hyperlinks|hyperlinks]].
''Example'': ```<span id="hyperlinks"></span>``` creates an anchor called hyperlinks that could be located at the beginning of a section related to hyperlinks.

''Note'': In some cases you cannot place anchor markup on the same line as other text, such as headings, without affecting the formatting following the anchor.  It is preferable to place the anchor markup on its own line to avoid these conflicts.

''Note'': It is best to place your anchor on the line ''above'' the beginning of the section you are marking with the anchor.  This is because the next line after the anchor will be aligned with the top of the viewing window when it is used.  If the anchor is below something like a heading the heading will be off screen when the anchor is used.  The exception to this is if the anchor is very close to the bottom of the page, in which case it will be moved as close to the top of the screen as possible.

More (but not much) wiki markup for anchors can be found at [http://wiki.libsdl.org/moin.cgi/HelpOnLinking HelpOnLinking] and [http://wiki.libsdl.org/moin.cgi/HelpOnMacros HelpOnMacros].

~-[[#ToC|Return to Table of Contents]]-~



<span id="tables"></span>
=== Tables ===
''Action'': To create a basic table with default spacing and styling.

''Markup'': Two pipes (||) are used to begin and end a table row, with two pipes separating each cell in between.
: ''<<Color2(red,Important!)>>'' There can be no blank spaces or other characters after the closing pipes on a line.

''Example'': 
 ```
||row 1 column 1||row 1 column 2||row 1 column 3||
||row 2 column 1||row 2 column 2||row 2 column 3||
```
  ''Generates'':
 ||row 1 column 1||row 1 column 2||row 1 column 3||
 ||row 2 column1||row 2 column 2||row 2 column 3||


''Action'': To create non-default formatting in tables place any of the following markup within <> at the beginning of the cell, row, column, or table to be formatted.  
* All formatting markup can be placed within the same <>, separated by spaces.
* If markup conflicts the last option in the list wins.

''Markup 1'': 
: ''If'' you know CSS formatted <code>style</code> markup you can append most any common formatting into the ```<style="...">``` markup to create table formatting.  You can also use <code>class</code> markup to some extent.  
: See [http://wiki.libsdl.org/moin.cgi/HelpOnTables Help On Tables] for details.

''Markup 2'': 
: ''If'' you would prefer to use the wiki markup or do not know CSS styles see the table below.

{|
|
|<rowbgcolor="#EDEDED">''Colors''
|-
|<( |4 30%>To colorize __text in a cell__
|''Markup 1'': use <<Color2(red,C)>><<Color2(orange,o)>><<Color2(yellow,l)>><<Color2(green,o)>><<Color2(blue,r)>><<Color2(indigo,e)>><<Color2(violet,d)>> <<Color2(brown,T)>><<Color2(pink,e)>><<Color2(grey,x)>><<Color2(purple,t)>> described [[#formatting|above]]
|-
|''Markup 2'': ```style="color: #XXXXXX;"```<br/>where <code>XXXXXX</code> is a hexadecimal color code
|-
|<style="color:#339933;">''Example'': this cells began with ```<style="color:#339933;">```
|-
|''Note'': ''Markup 2'' can only be used to colorize all of the text within a cell.  See ''Markup 1'' to colorize only some text in a cell.
|-
|To set __cell background color__
|''Markup'': ```bgcolor="#XXXXXX"```<br/>where <code>XXXXXX</code> is a hexadecimal color code
|-
|<( |2 30%>To set __row background color__
|''Markup'': ```rowbgcolor="#XXXXXX"```<br/>where <code>XXXXXX</code> is a hexadecimal color code
|-
|''Note'': This is only valid in the first cell of a row
|-
|<( |2 30%>To set __table background color__
|''Markup'': ```tablebgcolor="#XXXXXX"```<br/>where <code>XXXXXX</code> is a hexadecimal color code
|-
|''Note'': This is valid in the first cell of the table
|-
|
|<rowbgcolor="#EDEDED">''Alignment''
|-
|<( |2 30%>To control __horizontal text alignment__
|''Markup'':<br/>left = (<br/>centered = ''':'''<br/>right = )
|-
|''Example'': The first column in this table uses ( 
|-
|<( |2 30%>To control __vertical text alignment__
|''Markup'':<br/>top = ^<br/>bottom = v
|-
|''Note'': middle is the default so there is no markup for it.
|-
|
|<rowbgcolor="#EDEDED">''Sizes''
|-
|<( |2 30%>To control __table width__
|''Markup'': ```tablewidth="x%"``` where 0 < x < 100
|-
|''Note'': This is only valid in the first cell of the table.
|-
|<( |3 30%>To control __column width__
|''Markup'': In the column you wish to control, use ```x%``` or {{{width="x%"}}} where 0 < x < 100.
|-
|''Note'': The remaining columns will auto-balance using the remaining percentage of table width and the size of the cell contents.  (It may be the case that setting the column width in one cell will affect the whole table.  I have not tested this extensively.)
|-
|''Example'': This table uses <code>30%</code> in the first column
|-
|<rowbgcolor="#EDEDED" : -2>''Spanning''
|-
|<( |3 30%>To cause a cell to __span multiple rows__
|''Markup'': ```|x``` where x is the number of rows to span including the first
|-
|''Note'': When creating the table, the cell(s) in the first row to span should be included on the same line as the spanning cell as usual.  Each additional row should be on it's own table line, omitting the spanning cell.
|-
|''Example'': Go into <<Color2(blue,Edit (Text))>> mode and look at most any of the tables in this document.
|-
|<( |7 30%>To cause a cell to __span multiple columns__
|''Markup 1'': Create empty cells at the beginning of the row equaling the number of cells to skip/span, then place your text in the last cell of that row.
|-
|''Example'': ```
|
|
|cell spanning 3 columns
|```; grey "Sizes" cell in this table
|-
|''Note'': Total number of columns should equal that of the table.
|-
|''Note'': Centers text in the spanning row by default.
|-
|''Markup 2'': Use ```-x``` where x is the number of columns to span including the first
|-
|''Example'': ```
|<-3>text spanning 3 columns
|```; grey "Spanning" cell in this table
|-
|''Note'': Left justifies text in the spanning row by default.
|}


More wiki markup for tables can be found at [http://wiki.libsdl.org/moin.cgi/HelpOnTables HelpOnTables]

~-[[#ToC|Return to Table of Contents]]-~


<span id="headers"></span>
=== Headers ===
 Use one to five equals signs (=) surrounding header text, with a space between markup and text.
* One equals sign is the highest level header (largest)
: ''Example'': = Title =<br/>
* Five equals signs is the lowest level header (smallest) 
: ''Example'': ===== Minor =====<br/>
 ''Example'': ```=== Some Wiki Markup Basics ===```<br/>
 Headers will appear in an automatically generated [[#ToC|Table of Contents]].
: More (but not much) wiki markup for headers can be found at [http://wiki.libsdl.org/moin.cgi/HelpOnHeadlines HelpOnHeadlines].

[[#ToC|Return to Table of Contents]]


<span id="include"></span>
=== Includes ===
 An include enables you to copy all or a portion of a page onto another page, allowing changes to one page to be automatically updated on another.  This is especially useful for listing enumeration values for a function parameter on the function page, for example.<br/>
 To create an Include place the following markup in the location where you wish the data to begin on the recipient page.
  For copying values from an enumeration:<br/>
  ```
<<Include(SDL_Enumeration, , , from="== Values ==", to="== Code Examples ==")>>
```
   where ```SDL_Enumeration``` is replaced by the Enumeration's name.<br/>
  For copying data fields from a structure:<br/>
  ```
<<Include(SDL_Structure, , , from="== Data Fields ==", to="== Code Examples ==")>>
```
   where ```SDL_Structure``` is replaced by the Structure's name.<br/>
  The basic format is ```
<<Include(pagename, heading, level, from="regex", to="regex", sort=ascending|descending, items=n, skipitems=n, titlesonly, editlink)>>
```
   See [http://wiki.libsdl.org/moin.cgi/HelpOnMacros/Include HelpOnMacros/Include] for details if a different include becomes necessary.
  {i} The <code>from=</code> and <code>to=</code> start markers are very literal!  They will include ''everything'' following the end of the start marker and up to but not including the beginning of the end marker.  (This is why the header markup is included in the above statements.)  When creating an Include statement choose <code>from=</code> and <code>to=</code> parameters carefully.

[[#ToC|Return to Table of Contents]]


<!-- #To include an embedded ToC (eg: <<TableOfContents(3)>>) use standard ToC syntax but include comma-separated values to limit heading levels that are listed instead of empty parens.  First # is highest level, 2nd number is lowest level to include. ie: 2,4 includes levels 2-4. -->


------



== Miscellaneous Notes ==


=== Other Help ===
Some other wiki help that might be of interest or helpful to find quickly:
:[http://wiki.libsdl.org/moin.cgi/HelpIndex HelpIndex]
:[http://wiki.libsdl.org/moin.cgi/HelpOnFormatting HelpOnFormatting]
:[http://wiki.libsdl.org/moin.cgi/HelpOnEditing HelpOnEditing]
:[http://wiki.libsdl.org/moin.cgi/HelpOnSmileys HelpOnSmileys]
:[http://wiki.libsdl.org/moin.cgi/HelpOnAdmonitions HelpOnAdmonitions]


[[#ToC|Return to Table of Contents]]


<!-- #This is a test of the hidden comment system.  This is only a test.  An include begins here.  It is used on all other SG pages.  Please note that any change between this note and the next will be reflected on every SG page as well.  Consider edits carefully. -->
----
== Resources ==

Our goal is to create accurate, consistent, helpful, user-friendly documentation.  We appreciate your efforts to make your additions fit into the existing framework and retain the same look and feel as much 
as possible.

If you have questions that aren't addressed here:
 a. Search for another page that contains something similar to what you want to do and copy all the basics as much as applicable.  
 a. Check the other SDL [http://wiki.libsdl.org/moin.cgi/Contributing#guides Style Guides].
 a. Post a question to [http://wiki.libsdl.org/moin.cgi/Contributing#form Feedback] and 
include a way to contact you.
 a. Post a question to the [http://wiki.libsdl.org/moin.cgi/Contributing#list Mailing List]
 a. Send a comment or question to <<MailTo(ANTI SPAM wiki AT libsdl DOT org)>> for clarification.

If you have suggestions for changes or additions to this document or any other portion of the wiki please don't hesitate to contact us with your thoughts.  We are happy to have the participation!

------
== Disclaimer ==
```#!wiki note
All content modifications are subject to review for consistency and quality.  We reserve the right to remove or modify any content added to this wiki at any time.  You may direct questions or concerns to <<MailTo(ANTI SPAM wiki AT libsdl DOT org)>>.
```
<!-- #This concludes the test of the hidden comment system.  This was only a test.  The include which began just above Resources concludes here.  Note that this include is applied on every other SG page and should be edited carefully with that in mind. -->
