<!-- #master-page:CategoryTemplate -->
<!-- #master-date:Unknown-Date -->
<!-- format wiki -->
<!-- language en -->

= Thread Synchronization Primitives =

'''Include File(s):'''  [http://hg.libsdl.org/SDL/file/default/include/SDL_mutex.h SDL_mutex.h], [http://hg.libsdl.org/SDL/file/default/include/SDL_thread.h SDL_thread.h]


== Introduction ==

Functions in this group provide thread synchronization primitives for multi-threaded programing.

There are 3 primitives available in SDL:
* Mutex
* Semaphore
* Condition Variable

The SDL mutex is implemented as a recursive mutex so you can nest lock and unlock calls to the same mutex.


<!-- #Remove this line and the ## below to use this markup if it becomes relevant to this category -->
<!-- #== Enumerations == -->
<!-- #<<FullSearchCached(category:CategoryEnum CategoryMutex -title:SGEnumerations)>> -->

<!-- #== Structures == -->
<!-- #<<FullSearchCached(category:CategoryStruct CategoryMutex -title:SGStructures)>> -->

== Functions ==
<<FullSearchCached(category:CategoryMutex -CategoryEnum -CategoryStruct -title:SGFunctions)>>

----
CategoryCategory
