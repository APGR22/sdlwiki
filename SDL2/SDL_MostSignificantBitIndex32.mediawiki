
<!-- #*^*^*^*^*See https://wiki.libsdl.org/SGFunctions for details on editing this page*^*^*^*^* -->


= SDL_MostSignificantBitIndex32 =
Use this function to get the index of the most significant (set) bit in a
32-bit number. This is also the same as the base 2 logarithm of the number.




== Syntax ==
<syntaxhighlight lang='c++'>
int SDL_MostSignificantBitIndex32(Uint32 x)
</syntaxhighlight>


== Function Parameters ==
{|
|'''x'''
|the number to find the MSB of
|}


== Return Value ==
Returns the index of the most significant bit of x, or -1 if x is 0.

== Code Examples ==
<syntaxhighlight lang='c++'>
#include "SDL_bits.h"

if (bitmask) {
    int index = SDL_MostSignificantBitIndex32(bitmask);
}
</syntaxhighlight>

----
[[CategoryAPI]], [[CategoryBits]]
<!-- #See the Style Guide for instructions on editing the footer. -->
