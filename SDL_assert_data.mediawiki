<!-- pragma section-numbers off -->
<!-- pragma camelcase off -->
<!-- acl All:read -->
'''DRAFT'''

= SDL_assert_data =
A structure that contains assertion information.


== Data Fields ==
{|
|int
|'''always_ignore'''
|1 if set, 0 otherwise
|-
|unsigned int
|'''trigger_count'''
|number of times this assertion was triggered
|-
|const char*
|'''condition'''
|the assertion condition to check
|-
|const char*
|'''filename'''
|the filename containing the assertion
|-
|int
|'''linenum'''
|the location of the assertion in the file
|-
|const char*
|'''function'''
|the function containing the assertion
|-
|<style="color: #808080;">const struct [[SDL_assert_data]]*
|<style="color: #808080;">'''next'''
|<style="color: #808080;">(internal use)
|}

== Code Examples ==
```c++
You can add your code example here
```

== Remarks ==
''You can add useful comments here''

This structure is filled in with information about the assertion and is used by the assertion handler then added to the assertion report.

== Related Functions ==
:[[SDL_assert]]
:[[SDL_assert_paranoid]]
:[[SDL_assert_release]]
:[[SDL_GetAssertionReport]]

----
[[CategoryStruct]], [[CategoryAssertions]]
